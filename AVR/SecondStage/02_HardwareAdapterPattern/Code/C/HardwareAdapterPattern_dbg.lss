
HardwareAdapterPattern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  0000117c  00001210  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000117c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080012a  0080012a  0000123a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000123a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001298  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000012d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000111d  00000000  00000000  00001378  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c19  00000000  00000000  00002495  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005a9  00000000  00000000  000030ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000364  00000000  00000000  00003658  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006f9  00000000  00000000  000039bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006bf  00000000  00000000  000040b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec e7       	ldi	r30, 0x7C	; 124
      a0:	f1 e1       	ldi	r31, 0x11	; 17
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 32       	cpi	r26, 0x2A	; 42
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	aa e2       	ldi	r26, 0x2A	; 42
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a4 33       	cpi	r26, 0x34	; 52
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	9b d1       	rcall	.+822    	; 0x3fa <main>
      c4:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <AcmeO2Adapter_gimmeO2Conc>:
#include <stdlib.h>
#include "AcmeO2Adapter.h"

int AcmeO2Adapter_gimmeO2Conc(AcmeO2Adapter* const me) {
      ca:	cf 93       	push	r28
      cc:	df 93       	push	r29
      ce:	00 d0       	rcall	.+0      	; 0xd0 <AcmeO2Adapter_gimmeO2Conc+0x6>
      d0:	cd b7       	in	r28, 0x3d	; 61
      d2:	de b7       	in	r29, 0x3e	; 62
      d4:	9a 83       	std	Y+2, r25	; 0x02
      d6:	89 83       	std	Y+1, r24	; 0x01
	return me->itsAcmeO2SensorProxy->getO2Conc(me->itsAcmeO2SensorProxy);
      d8:	89 81       	ldd	r24, Y+1	; 0x01
      da:	9a 81       	ldd	r25, Y+2	; 0x02
      dc:	fc 01       	movw	r30, r24
      de:	80 81       	ld	r24, Z
      e0:	91 81       	ldd	r25, Z+1	; 0x01
      e2:	fc 01       	movw	r30, r24
      e4:	22 81       	ldd	r18, Z+2	; 0x02
      e6:	33 81       	ldd	r19, Z+3	; 0x03
      e8:	89 81       	ldd	r24, Y+1	; 0x01
      ea:	9a 81       	ldd	r25, Y+2	; 0x02
      ec:	fc 01       	movw	r30, r24
      ee:	80 81       	ld	r24, Z
      f0:	91 81       	ldd	r25, Z+1	; 0x01
      f2:	f9 01       	movw	r30, r18
      f4:	09 95       	icall
}
      f6:	0f 90       	pop	r0
      f8:	0f 90       	pop	r0
      fa:	df 91       	pop	r29
      fc:	cf 91       	pop	r28
      fe:	08 95       	ret

00000100 <AcmeO2Adapter_gimmeO2Flow>:

int AcmeO2Adapter_gimmeO2Flow(AcmeO2Adapter* const me) {
     100:	cf 93       	push	r28
     102:	df 93       	push	r29
     104:	00 d0       	rcall	.+0      	; 0x106 <AcmeO2Adapter_gimmeO2Flow+0x6>
     106:	cd b7       	in	r28, 0x3d	; 61
     108:	de b7       	in	r29, 0x3e	; 62
     10a:	9a 83       	std	Y+2, r25	; 0x02
     10c:	89 83       	std	Y+1, r24	; 0x01
	return (me->itsAcmeO2SensorProxy->getO2Flow(me->itsAcmeO2SensorProxy) * 60) / 100;
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	9a 81       	ldd	r25, Y+2	; 0x02
     112:	fc 01       	movw	r30, r24
     114:	80 81       	ld	r24, Z
     116:	91 81       	ldd	r25, Z+1	; 0x01
     118:	fc 01       	movw	r30, r24
     11a:	24 81       	ldd	r18, Z+4	; 0x04
     11c:	35 81       	ldd	r19, Z+5	; 0x05
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	9a 81       	ldd	r25, Y+2	; 0x02
     122:	fc 01       	movw	r30, r24
     124:	80 81       	ld	r24, Z
     126:	91 81       	ldd	r25, Z+1	; 0x01
     128:	f9 01       	movw	r30, r18
     12a:	09 95       	icall
     12c:	9b 01       	movw	r18, r22
     12e:	ac 01       	movw	r20, r24
     130:	8c e3       	ldi	r24, 0x3C	; 60
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	dc 01       	movw	r26, r24
     136:	26 d4       	rcall	.+2124   	; 0x984 <__muluhisi3>
     138:	dc 01       	movw	r26, r24
     13a:	cb 01       	movw	r24, r22
     13c:	24 e6       	ldi	r18, 0x64	; 100
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	40 e0       	ldi	r20, 0x00	; 0
     142:	50 e0       	ldi	r21, 0x00	; 0
     144:	bc 01       	movw	r22, r24
     146:	cd 01       	movw	r24, r26
     148:	fb d3       	rcall	.+2038   	; 0x940 <__udivmodsi4>
     14a:	da 01       	movw	r26, r20
     14c:	c9 01       	movw	r24, r18
}
     14e:	0f 90       	pop	r0
     150:	0f 90       	pop	r0
     152:	df 91       	pop	r29
     154:	cf 91       	pop	r28
     156:	08 95       	ret

00000158 <AcmeO2Adapter_configure>:

void AcmeO2Adapter_configure(AcmeO2Adapter* const me, AcmeO2SensorProxy* acmeO2SensorProxy) {
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	00 d0       	rcall	.+0      	; 0x15e <AcmeO2Adapter_configure+0x6>
     15e:	00 d0       	rcall	.+0      	; 0x160 <AcmeO2Adapter_configure+0x8>
     160:	cd b7       	in	r28, 0x3d	; 61
     162:	de b7       	in	r29, 0x3e	; 62
     164:	9a 83       	std	Y+2, r25	; 0x02
     166:	89 83       	std	Y+1, r24	; 0x01
     168:	7c 83       	std	Y+4, r23	; 0x04
     16a:	6b 83       	std	Y+3, r22	; 0x03
	me->itsAcmeO2SensorProxy = acmeO2SensorProxy;
     16c:	89 81       	ldd	r24, Y+1	; 0x01
     16e:	9a 81       	ldd	r25, Y+2	; 0x02
     170:	2b 81       	ldd	r18, Y+3	; 0x03
     172:	3c 81       	ldd	r19, Y+4	; 0x04
     174:	fc 01       	movw	r30, r24
     176:	31 83       	std	Z+1, r19	; 0x01
     178:	20 83       	st	Z, r18
}
     17a:	00 00       	nop
     17c:	0f 90       	pop	r0
     17e:	0f 90       	pop	r0
     180:	0f 90       	pop	r0
     182:	0f 90       	pop	r0
     184:	df 91       	pop	r29
     186:	cf 91       	pop	r28
     188:	08 95       	ret

0000018a <AcmeO2Adapter_Create>:

AcmeO2Adapter* AcmeO2Adapter_Create(void) {
     18a:	cf 93       	push	r28
     18c:	df 93       	push	r29
     18e:	00 d0       	rcall	.+0      	; 0x190 <AcmeO2Adapter_Create+0x6>
     190:	cd b7       	in	r28, 0x3d	; 61
     192:	de b7       	in	r29, 0x3e	; 62
	AcmeO2Adapter* me = (AcmeO2Adapter*)malloc(sizeof(AcmeO2Adapter));
     194:	86 e0       	ldi	r24, 0x06	; 6
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	0e d4       	rcall	.+2076   	; 0x9b6 <malloc>
     19a:	9a 83       	std	Y+2, r25	; 0x02
     19c:	89 83       	std	Y+1, r24	; 0x01

	if (me != NULL) {
     19e:	89 81       	ldd	r24, Y+1	; 0x01
     1a0:	9a 81       	ldd	r25, Y+2	; 0x02
     1a2:	89 2b       	or	r24, r25
		AcmeO2Adapter_Init(me);
     1a4:	19 f0       	breq	.+6      	; 0x1ac <AcmeO2Adapter_Create+0x22>
     1a6:	89 81       	ldd	r24, Y+1	; 0x01
     1a8:	9a 81       	ldd	r25, Y+2	; 0x02
     1aa:	1b d0       	rcall	.+54     	; 0x1e2 <AcmeO2Adapter_Init>
	}

	return me;
     1ac:	89 81       	ldd	r24, Y+1	; 0x01
     1ae:	9a 81       	ldd	r25, Y+2	; 0x02
}
     1b0:	0f 90       	pop	r0
     1b2:	0f 90       	pop	r0
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <AcmeO2Adapter_Destroy>:

void AcmeO2Adapter_Destroy(AcmeO2Adapter* const me) {
     1ba:	cf 93       	push	r28
     1bc:	df 93       	push	r29
     1be:	00 d0       	rcall	.+0      	; 0x1c0 <AcmeO2Adapter_Destroy+0x6>
     1c0:	cd b7       	in	r28, 0x3d	; 61
     1c2:	de b7       	in	r29, 0x3e	; 62
     1c4:	9a 83       	std	Y+2, r25	; 0x02
     1c6:	89 83       	std	Y+1, r24	; 0x01
	if (me != NULL) {
     1c8:	89 81       	ldd	r24, Y+1	; 0x01
     1ca:	9a 81       	ldd	r25, Y+2	; 0x02
     1cc:	89 2b       	or	r24, r25
		free(me);
     1ce:	19 f0       	breq	.+6      	; 0x1d6 <AcmeO2Adapter_Destroy+0x1c>
     1d0:	89 81       	ldd	r24, Y+1	; 0x01
     1d2:	9a 81       	ldd	r25, Y+2	; 0x02
     1d4:	88 d4       	rcall	.+2320   	; 0xae6 <free>
		//IO2Sensor_Cleanup(me);
	}
}
     1d6:	00 00       	nop
     1d8:	0f 90       	pop	r0
     1da:	0f 90       	pop	r0
     1dc:	df 91       	pop	r29
     1de:	cf 91       	pop	r28
     1e0:	08 95       	ret

000001e2 <AcmeO2Adapter_Init>:

void AcmeO2Adapter_Init(AcmeO2Adapter* const me) {
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
     1e6:	00 d0       	rcall	.+0      	; 0x1e8 <AcmeO2Adapter_Init+0x6>
     1e8:	cd b7       	in	r28, 0x3d	; 61
     1ea:	de b7       	in	r29, 0x3e	; 62
     1ec:	9a 83       	std	Y+2, r25	; 0x02
     1ee:	89 83       	std	Y+1, r24	; 0x01
	me->gimmeO2Conc = AcmeO2Adapter_gimmeO2Conc;
     1f0:	89 81       	ldd	r24, Y+1	; 0x01
     1f2:	9a 81       	ldd	r25, Y+2	; 0x02
     1f4:	25 e6       	ldi	r18, 0x65	; 101
     1f6:	30 e0       	ldi	r19, 0x00	; 0
     1f8:	fc 01       	movw	r30, r24
     1fa:	33 83       	std	Z+3, r19	; 0x03
     1fc:	22 83       	std	Z+2, r18	; 0x02
	me->gimmeO2Flow = AcmeO2Adapter_gimmeO2Flow;
     1fe:	89 81       	ldd	r24, Y+1	; 0x01
     200:	9a 81       	ldd	r25, Y+2	; 0x02
     202:	20 e8       	ldi	r18, 0x80	; 128
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	fc 01       	movw	r30, r24
     208:	35 83       	std	Z+5, r19	; 0x05
     20a:	24 83       	std	Z+4, r18	; 0x04
     20c:	00 00       	nop
     20e:	0f 90       	pop	r0
     210:	0f 90       	pop	r0
     212:	df 91       	pop	r29
     214:	cf 91       	pop	r28
     216:	08 95       	ret

00000218 <AcmeO2SensorProxy_Create>:
#include <stdlib.h>
#include "AcmeO2SensorProxy.h"

AcmeO2SensorProxy* AcmeO2SensorProxy_Create(void) {
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	00 d0       	rcall	.+0      	; 0x21e <AcmeO2SensorProxy_Create+0x6>
     21e:	cd b7       	in	r28, 0x3d	; 61
     220:	de b7       	in	r29, 0x3e	; 62
	AcmeO2SensorProxy* me = (AcmeO2SensorProxy*)malloc(sizeof(AcmeO2SensorProxy));
     222:	86 e0       	ldi	r24, 0x06	; 6
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	c7 d3       	rcall	.+1934   	; 0x9b6 <malloc>
     228:	9a 83       	std	Y+2, r25	; 0x02
     22a:	89 83       	std	Y+1, r24	; 0x01

	if (me != NULL) {
     22c:	89 81       	ldd	r24, Y+1	; 0x01
     22e:	9a 81       	ldd	r25, Y+2	; 0x02
     230:	89 2b       	or	r24, r25
     232:	19 f0       	breq	.+6      	; 0x23a <AcmeO2SensorProxy_Create+0x22>
		AcmeO2SensorProxy_Init(me);
     234:	89 81       	ldd	r24, Y+1	; 0x01
     236:	9a 81       	ldd	r25, Y+2	; 0x02
     238:	1b d0       	rcall	.+54     	; 0x270 <AcmeO2SensorProxy_Init>
	}

	return me;
     23a:	89 81       	ldd	r24, Y+1	; 0x01
     23c:	9a 81       	ldd	r25, Y+2	; 0x02
}
     23e:	0f 90       	pop	r0
     240:	0f 90       	pop	r0
     242:	df 91       	pop	r29
     244:	cf 91       	pop	r28
     246:	08 95       	ret

00000248 <AcmeO2SensorProxy_Destroy>:

void AcmeO2SensorProxy_Destroy(AcmeO2SensorProxy* const me) {
     248:	cf 93       	push	r28
     24a:	df 93       	push	r29
     24c:	00 d0       	rcall	.+0      	; 0x24e <AcmeO2SensorProxy_Destroy+0x6>
     24e:	cd b7       	in	r28, 0x3d	; 61
     250:	de b7       	in	r29, 0x3e	; 62
     252:	9a 83       	std	Y+2, r25	; 0x02
     254:	89 83       	std	Y+1, r24	; 0x01
	if (me != NULL) {
     256:	89 81       	ldd	r24, Y+1	; 0x01
     258:	9a 81       	ldd	r25, Y+2	; 0x02
     25a:	89 2b       	or	r24, r25
     25c:	19 f0       	breq	.+6      	; 0x264 <AcmeO2SensorProxy_Destroy+0x1c>
		free(me);
     25e:	89 81       	ldd	r24, Y+1	; 0x01
     260:	9a 81       	ldd	r25, Y+2	; 0x02
     262:	41 d4       	rcall	.+2178   	; 0xae6 <free>
		//IO2Sensor_Cleanup(me);
	}
}
     264:	00 00       	nop
     266:	0f 90       	pop	r0
     268:	0f 90       	pop	r0
     26a:	df 91       	pop	r29
     26c:	cf 91       	pop	r28
     26e:	08 95       	ret

00000270 <AcmeO2SensorProxy_Init>:

void AcmeO2SensorProxy_Init(AcmeO2SensorProxy* const me) {
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	00 d0       	rcall	.+0      	; 0x276 <AcmeO2SensorProxy_Init+0x6>
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
     27a:	9a 83       	std	Y+2, r25	; 0x02
     27c:	89 83       	std	Y+1, r24	; 0x01
	me->getO2Conc = AcmeO2SensorProxy_getO2Conc;
     27e:	89 81       	ldd	r24, Y+1	; 0x01
     280:	9a 81       	ldd	r25, Y+2	; 0x02
     282:	2c e6       	ldi	r18, 0x6C	; 108
     284:	31 e0       	ldi	r19, 0x01	; 1
     286:	fc 01       	movw	r30, r24
     288:	33 83       	std	Z+3, r19	; 0x03
     28a:	22 83       	std	Z+2, r18	; 0x02
	me->getO2Flow = AcmeO2SensorProxy_getO2Flow;
     28c:	89 81       	ldd	r24, Y+1	; 0x01
     28e:	9a 81       	ldd	r25, Y+2	; 0x02
     290:	2a e7       	ldi	r18, 0x7A	; 122
     292:	31 e0       	ldi	r19, 0x01	; 1
     294:	fc 01       	movw	r30, r24
     296:	35 83       	std	Z+5, r19	; 0x05
     298:	24 83       	std	Z+4, r18	; 0x04
}
     29a:	00 00       	nop
     29c:	0f 90       	pop	r0
     29e:	0f 90       	pop	r0
     2a0:	df 91       	pop	r29
     2a2:	cf 91       	pop	r28
     2a4:	08 95       	ret

000002a6 <AcmeO2SensorProxy_configure>:

void AcmeO2SensorProxy_configure(AcmeO2SensorProxy* const me, unsigned int* location) {
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	00 d0       	rcall	.+0      	; 0x2ac <AcmeO2SensorProxy_configure+0x6>
     2ac:	00 d0       	rcall	.+0      	; 0x2ae <AcmeO2SensorProxy_configure+0x8>
     2ae:	cd b7       	in	r28, 0x3d	; 61
     2b0:	de b7       	in	r29, 0x3e	; 62
     2b2:	9a 83       	std	Y+2, r25	; 0x02
     2b4:	89 83       	std	Y+1, r24	; 0x01
     2b6:	7c 83       	std	Y+4, r23	; 0x04
     2b8:	6b 83       	std	Y+3, r22	; 0x03

	me->sensorAddr = location;
     2ba:	89 81       	ldd	r24, Y+1	; 0x01
     2bc:	9a 81       	ldd	r25, Y+2	; 0x02
     2be:	2b 81       	ldd	r18, Y+3	; 0x03
     2c0:	3c 81       	ldd	r19, Y+4	; 0x04
     2c2:	fc 01       	movw	r30, r24
     2c4:	31 83       	std	Z+1, r19	; 0x01
     2c6:	20 83       	st	Z, r18
}
     2c8:	00 00       	nop
     2ca:	0f 90       	pop	r0
     2cc:	0f 90       	pop	r0
     2ce:	0f 90       	pop	r0
     2d0:	0f 90       	pop	r0
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <AcmeO2SensorProxy_getO2Conc>:

unsigned int AcmeO2SensorProxy_getO2Conc(AcmeO2SensorProxy* const me) {
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	00 d0       	rcall	.+0      	; 0x2de <AcmeO2SensorProxy_getO2Conc+0x6>
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	9a 83       	std	Y+2, r25	; 0x02
     2e4:	89 83       	std	Y+1, r24	; 0x01
	return 20;
     2e6:	84 e1       	ldi	r24, 0x14	; 20
     2e8:	90 e0       	ldi	r25, 0x00	; 0
}
     2ea:	0f 90       	pop	r0
     2ec:	0f 90       	pop	r0
     2ee:	df 91       	pop	r29
     2f0:	cf 91       	pop	r28
     2f2:	08 95       	ret

000002f4 <AcmeO2SensorProxy_getO2Flow>:

unsigned long AcmeO2SensorProxy_getO2Flow(AcmeO2SensorProxy* const me) {
     2f4:	cf 93       	push	r28
     2f6:	df 93       	push	r29
     2f8:	00 d0       	rcall	.+0      	; 0x2fa <AcmeO2SensorProxy_getO2Flow+0x6>
     2fa:	cd b7       	in	r28, 0x3d	; 61
     2fc:	de b7       	in	r29, 0x3e	; 62
     2fe:	9a 83       	std	Y+2, r25	; 0x02
     300:	89 83       	std	Y+1, r24	; 0x01
	return 50;
     302:	82 e3       	ldi	r24, 0x32	; 50
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	a0 e0       	ldi	r26, 0x00	; 0
     308:	b0 e0       	ldi	r27, 0x00	; 0
     30a:	bc 01       	movw	r22, r24
     30c:	cd 01       	movw	r24, r26
     30e:	0f 90       	pop	r0
     310:	0f 90       	pop	r0
     312:	df 91       	pop	r29
     314:	cf 91       	pop	r28
     316:	08 95       	ret

00000318 <IO2Sensor_Create>:
#include <stdlib.h>
#include "IO2Sensor.h"

IO2Sensor* IO2Sensor_Create(void) {
     318:	cf 93       	push	r28
     31a:	df 93       	push	r29
     31c:	00 d0       	rcall	.+0      	; 0x31e <IO2Sensor_Create+0x6>
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
	IO2Sensor* me = (IO2Sensor*)malloc(sizeof(IO2Sensor));
     322:	86 e0       	ldi	r24, 0x06	; 6
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	47 d3       	rcall	.+1678   	; 0x9b6 <malloc>
     328:	9a 83       	std	Y+2, r25	; 0x02
     32a:	89 83       	std	Y+1, r24	; 0x01

	if (me != NULL) {
     32c:	89 81       	ldd	r24, Y+1	; 0x01
     32e:	9a 81       	ldd	r25, Y+2	; 0x02
     330:	89 2b       	or	r24, r25
     332:	19 f0       	breq	.+6      	; 0x33a <IO2Sensor_Create+0x22>
		IO2Sensor_Init(me);
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	9a 81       	ldd	r25, Y+2	; 0x02
     338:	1b d0       	rcall	.+54     	; 0x370 <IO2Sensor_Init>
	}

	return me;
     33a:	89 81       	ldd	r24, Y+1	; 0x01
     33c:	9a 81       	ldd	r25, Y+2	; 0x02
}
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	df 91       	pop	r29
     344:	cf 91       	pop	r28
     346:	08 95       	ret

00000348 <IO2Sensor_Destroy>:

void IO2Sensor_Destroy(IO2Sensor* const me) {
     348:	cf 93       	push	r28
     34a:	df 93       	push	r29
     34c:	00 d0       	rcall	.+0      	; 0x34e <IO2Sensor_Destroy+0x6>
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	9a 83       	std	Y+2, r25	; 0x02
     354:	89 83       	std	Y+1, r24	; 0x01
	if (me != NULL) {
     356:	89 81       	ldd	r24, Y+1	; 0x01
     358:	9a 81       	ldd	r25, Y+2	; 0x02
     35a:	89 2b       	or	r24, r25
     35c:	19 f0       	breq	.+6      	; 0x364 <IO2Sensor_Destroy+0x1c>
		free(me);
     35e:	89 81       	ldd	r24, Y+1	; 0x01
     360:	9a 81       	ldd	r25, Y+2	; 0x02
     362:	c1 d3       	rcall	.+1922   	; 0xae6 <free>
		//IO2Sensor_Cleanup(me);
	}
}
     364:	00 00       	nop
     366:	0f 90       	pop	r0
     368:	0f 90       	pop	r0
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <IO2Sensor_Init>:

void IO2Sensor_Init(IO2Sensor* const me) {
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	00 d0       	rcall	.+0      	; 0x376 <IO2Sensor_Init+0x6>
     376:	cd b7       	in	r28, 0x3d	; 61
     378:	de b7       	in	r29, 0x3e	; 62
     37a:	9a 83       	std	Y+2, r25	; 0x02
     37c:	89 83       	std	Y+1, r24	; 0x01
	me->gimmeO2Conc = IO2Sensor_gimmeO2Conc;
     37e:	89 81       	ldd	r24, Y+1	; 0x01
     380:	9a 81       	ldd	r25, Y+2	; 0x02
     382:	23 ed       	ldi	r18, 0xD3	; 211
     384:	31 e0       	ldi	r19, 0x01	; 1
     386:	fc 01       	movw	r30, r24
     388:	33 83       	std	Z+3, r19	; 0x03
     38a:	22 83       	std	Z+2, r18	; 0x02
	me->gimmeO2Flow = IO2Sensor_gimmeO2Flow;
     38c:	89 81       	ldd	r24, Y+1	; 0x01
     38e:	9a 81       	ldd	r25, Y+2	; 0x02
     390:	28 ee       	ldi	r18, 0xE8	; 232
     392:	31 e0       	ldi	r19, 0x01	; 1
     394:	fc 01       	movw	r30, r24
     396:	35 83       	std	Z+5, r19	; 0x05
     398:	24 83       	std	Z+4, r18	; 0x04
}
     39a:	00 00       	nop
     39c:	0f 90       	pop	r0
     39e:	0f 90       	pop	r0
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	08 95       	ret

000003a6 <IO2Sensor_gimmeO2Conc>:

int IO2Sensor_gimmeO2Conc(IO2Sensor* const me) {
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	00 d0       	rcall	.+0      	; 0x3ac <IO2Sensor_gimmeO2Conc+0x6>
     3ac:	cd b7       	in	r28, 0x3d	; 61
     3ae:	de b7       	in	r29, 0x3e	; 62
     3b0:	9a 83       	std	Y+2, r25	; 0x02
     3b2:	89 83       	std	Y+1, r24	; 0x01
	return me->gimmeO2Conc(me);
     3b4:	89 81       	ldd	r24, Y+1	; 0x01
     3b6:	9a 81       	ldd	r25, Y+2	; 0x02
     3b8:	fc 01       	movw	r30, r24
     3ba:	22 81       	ldd	r18, Z+2	; 0x02
     3bc:	33 81       	ldd	r19, Z+3	; 0x03
     3be:	89 81       	ldd	r24, Y+1	; 0x01
     3c0:	9a 81       	ldd	r25, Y+2	; 0x02
     3c2:	f9 01       	movw	r30, r18
     3c4:	09 95       	icall
}
     3c6:	0f 90       	pop	r0
     3c8:	0f 90       	pop	r0
     3ca:	df 91       	pop	r29
     3cc:	cf 91       	pop	r28
     3ce:	08 95       	ret

000003d0 <IO2Sensor_gimmeO2Flow>:

int IO2Sensor_gimmeO2Flow(IO2Sensor* const me) {
     3d0:	cf 93       	push	r28
     3d2:	df 93       	push	r29
     3d4:	00 d0       	rcall	.+0      	; 0x3d6 <IO2Sensor_gimmeO2Flow+0x6>
     3d6:	cd b7       	in	r28, 0x3d	; 61
     3d8:	de b7       	in	r29, 0x3e	; 62
     3da:	9a 83       	std	Y+2, r25	; 0x02
     3dc:	89 83       	std	Y+1, r24	; 0x01
	return me->gimmeO2Flow(me);
     3de:	89 81       	ldd	r24, Y+1	; 0x01
     3e0:	9a 81       	ldd	r25, Y+2	; 0x02
     3e2:	fc 01       	movw	r30, r24
     3e4:	24 81       	ldd	r18, Z+4	; 0x04
     3e6:	35 81       	ldd	r19, Z+5	; 0x05
     3e8:	89 81       	ldd	r24, Y+1	; 0x01
     3ea:	9a 81       	ldd	r25, Y+2	; 0x02
     3ec:	f9 01       	movw	r30, r18
     3ee:	09 95       	icall
     3f0:	0f 90       	pop	r0
     3f2:	0f 90       	pop	r0
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	08 95       	ret

000003fa <main>:
#include <stdio.h>
#include "AcmeO2SensorProxy.h"
#include "UltimateO2SensorProxy.h"
#include "IO2Sensor.h"

int main(void) {
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	2e 97       	sbiw	r28, 0x0e	; 14
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	f8 94       	cli
     408:	de bf       	out	0x3e, r29	; 62
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	cd bf       	out	0x3d, r28	; 61
	AcmeO2SensorProxy acmeSensor;
	AcmeO2Adapter acmeAdapter;
	IO2Sensor* io2Sensor = IO2Sensor_Create();
     40e:	84 df       	rcall	.-248    	; 0x318 <IO2Sensor_Create>
     410:	9a 83       	std	Y+2, r25	; 0x02
     412:	89 83       	std	Y+1, r24	; 0x01

	AcmeO2SensorProxy_Init(&acmeSensor);
     414:	ce 01       	movw	r24, r28
     416:	03 96       	adiw	r24, 0x03	; 3
     418:	2b df       	rcall	.-426    	; 0x270 <AcmeO2SensorProxy_Init>
	AcmeO2Adapter_Init(&acmeAdapter);
     41a:	ce 01       	movw	r24, r28
     41c:	09 96       	adiw	r24, 0x09	; 9
     41e:	e1 de       	rcall	.-574    	; 0x1e2 <AcmeO2Adapter_Init>
	AcmeO2Adapter_configure(&acmeAdapter, &acmeSensor);
     420:	9e 01       	movw	r18, r28
     422:	2d 5f       	subi	r18, 0xFD	; 253
     424:	3f 4f       	sbci	r19, 0xFF	; 255
     426:	ce 01       	movw	r24, r28
     428:	09 96       	adiw	r24, 0x09	; 9
     42a:	b9 01       	movw	r22, r18
	IO2Sensor_Init(io2Sensor);
     42c:	95 de       	rcall	.-726    	; 0x158 <AcmeO2Adapter_configure>
     42e:	89 81       	ldd	r24, Y+1	; 0x01
     430:	9a 81       	ldd	r25, Y+2	; 0x02

	printf("O2 Concentration: %d\n", AcmeO2Adapter_gimmeO2Conc(&acmeAdapter));
     432:	9e df       	rcall	.-196    	; 0x370 <IO2Sensor_Init>
     434:	ce 01       	movw	r24, r28
     436:	09 96       	adiw	r24, 0x09	; 9
     438:	48 de       	rcall	.-880    	; 0xca <AcmeO2Adapter_gimmeO2Conc>
     43a:	29 2f       	mov	r18, r25
     43c:	2f 93       	push	r18
     43e:	8f 93       	push	r24
     440:	86 e0       	ldi	r24, 0x06	; 6
     442:	91 e0       	ldi	r25, 0x01	; 1
     444:	89 2f       	mov	r24, r25
     446:	8f 93       	push	r24
     448:	86 e0       	ldi	r24, 0x06	; 6
     44a:	91 e0       	ldi	r25, 0x01	; 1
     44c:	8f 93       	push	r24
     44e:	d4 d3       	rcall	.+1960   	; 0xbf8 <printf>
     450:	0f 90       	pop	r0
     452:	0f 90       	pop	r0
     454:	0f 90       	pop	r0
	printf("O2 Flow: %d\n", AcmeO2Adapter_gimmeO2Flow(&acmeAdapter));
     456:	0f 90       	pop	r0
     458:	ce 01       	movw	r24, r28
     45a:	09 96       	adiw	r24, 0x09	; 9
     45c:	51 de       	rcall	.-862    	; 0x100 <AcmeO2Adapter_gimmeO2Flow>
     45e:	29 2f       	mov	r18, r25
     460:	2f 93       	push	r18
     462:	8f 93       	push	r24
     464:	8c e1       	ldi	r24, 0x1C	; 28
     466:	91 e0       	ldi	r25, 0x01	; 1
     468:	89 2f       	mov	r24, r25
     46a:	8f 93       	push	r24
     46c:	8c e1       	ldi	r24, 0x1C	; 28
     46e:	91 e0       	ldi	r25, 0x01	; 1
     470:	8f 93       	push	r24
     472:	c2 d3       	rcall	.+1924   	; 0xbf8 <printf>
     474:	0f 90       	pop	r0
     476:	0f 90       	pop	r0
     478:	0f 90       	pop	r0
     47a:	0f 90       	pop	r0

	printf("O2 Concentration: %d\n",io2Sensor->gimmeO2Conc((IO2Sensor*)&acmeAdapter));
     47c:	89 81       	ldd	r24, Y+1	; 0x01
     47e:	9a 81       	ldd	r25, Y+2	; 0x02
     480:	fc 01       	movw	r30, r24
     482:	22 81       	ldd	r18, Z+2	; 0x02
     484:	33 81       	ldd	r19, Z+3	; 0x03
     486:	ce 01       	movw	r24, r28
     488:	09 96       	adiw	r24, 0x09	; 9
     48a:	f9 01       	movw	r30, r18
     48c:	09 95       	icall
     48e:	29 2f       	mov	r18, r25
     490:	2f 93       	push	r18
     492:	8f 93       	push	r24
     494:	86 e0       	ldi	r24, 0x06	; 6
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	89 2f       	mov	r24, r25
     49a:	8f 93       	push	r24
     49c:	86 e0       	ldi	r24, 0x06	; 6
     49e:	91 e0       	ldi	r25, 0x01	; 1
     4a0:	8f 93       	push	r24
     4a2:	aa d3       	rcall	.+1876   	; 0xbf8 <printf>
     4a4:	0f 90       	pop	r0
     4a6:	0f 90       	pop	r0
     4a8:	0f 90       	pop	r0
     4aa:	0f 90       	pop	r0
	printf("O2 Flow: %d\n", io2Sensor->gimmeO2Flow((IO2Sensor*)&acmeAdapter));
     4ac:	89 81       	ldd	r24, Y+1	; 0x01
     4ae:	9a 81       	ldd	r25, Y+2	; 0x02
     4b0:	fc 01       	movw	r30, r24
     4b2:	24 81       	ldd	r18, Z+4	; 0x04
     4b4:	35 81       	ldd	r19, Z+5	; 0x05
     4b6:	ce 01       	movw	r24, r28
     4b8:	09 96       	adiw	r24, 0x09	; 9
     4ba:	f9 01       	movw	r30, r18
     4bc:	09 95       	icall
     4be:	29 2f       	mov	r18, r25
     4c0:	2f 93       	push	r18
     4c2:	8f 93       	push	r24
     4c4:	8c e1       	ldi	r24, 0x1C	; 28
     4c6:	91 e0       	ldi	r25, 0x01	; 1
     4c8:	89 2f       	mov	r24, r25
     4ca:	8f 93       	push	r24
     4cc:	8c e1       	ldi	r24, 0x1C	; 28
     4ce:	91 e0       	ldi	r25, 0x01	; 1
     4d0:	8f 93       	push	r24
     4d2:	92 d3       	rcall	.+1828   	; 0xbf8 <printf>
     4d4:	0f 90       	pop	r0
     4d6:	0f 90       	pop	r0
     4d8:	0f 90       	pop	r0
        
    IO2Sensor_Destroy(io2Sensor);
     4da:	0f 90       	pop	r0
     4dc:	89 81       	ldd	r24, Y+1	; 0x01
     4de:	9a 81       	ldd	r25, Y+2	; 0x02
     4e0:	33 df       	rcall	.-410    	; 0x348 <IO2Sensor_Destroy>

	while (1) {
		
	}
     4e2:	ff cf       	rjmp	.-2      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>

000004e4 <UltimateO2Adapter_gimmeO2Conc>:
#include <stdlib.h>
#include "UltimateO2Adapter.h"

int UltimateO2Adapter_gimmeO2Conc(UltimateO2Adapter* const me) {
     4e4:	cf 93       	push	r28
     4e6:	df 93       	push	r29
     4e8:	00 d0       	rcall	.+0      	; 0x4ea <UltimateO2Adapter_gimmeO2Conc+0x6>
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
     4ee:	9a 83       	std	Y+2, r25	; 0x02
     4f0:	89 83       	std	Y+1, r24	; 0x01
	return (int)(me->itsUltimateO2SensorProxy->accessO2Conc(me->itsUltimateO2SensorProxy)) * 100;
     4f2:	89 81       	ldd	r24, Y+1	; 0x01
     4f4:	9a 81       	ldd	r25, Y+2	; 0x02
     4f6:	fc 01       	movw	r30, r24
     4f8:	80 81       	ld	r24, Z
     4fa:	91 81       	ldd	r25, Z+1	; 0x01
     4fc:	fc 01       	movw	r30, r24
     4fe:	22 81       	ldd	r18, Z+2	; 0x02
     500:	33 81       	ldd	r19, Z+3	; 0x03
     502:	89 81       	ldd	r24, Y+1	; 0x01
     504:	9a 81       	ldd	r25, Y+2	; 0x02
     506:	fc 01       	movw	r30, r24
     508:	80 81       	ld	r24, Z
     50a:	91 81       	ldd	r25, Z+1	; 0x01
     50c:	f9 01       	movw	r30, r18
     50e:	09 95       	icall
     510:	dc 01       	movw	r26, r24
     512:	cb 01       	movw	r24, r22
     514:	bc 01       	movw	r22, r24
     516:	cd 01       	movw	r24, r26
     518:	2e d1       	rcall	.+604    	; 0x776 <__fixsfsi>
     51a:	dc 01       	movw	r26, r24
     51c:	cb 01       	movw	r24, r22
     51e:	9c 01       	movw	r18, r24
     520:	44 e6       	ldi	r20, 0x64	; 100
     522:	42 9f       	mul	r20, r18
     524:	c0 01       	movw	r24, r0
     526:	43 9f       	mul	r20, r19
     528:	90 0d       	add	r25, r0
     52a:	11 24       	eor	r1, r1
}
     52c:	0f 90       	pop	r0
     52e:	0f 90       	pop	r0
     530:	df 91       	pop	r29
     532:	cf 91       	pop	r28
     534:	08 95       	ret

00000536 <UltimateO2Adapter_gimmeO2Flow>:

int UltimateO2Adapter_gimmeO2Flow(UltimateO2Adapter* const me) {
     536:	cf 93       	push	r28
     538:	df 93       	push	r29
     53a:	00 d0       	rcall	.+0      	; 0x53c <UltimateO2Adapter_gimmeO2Flow+0x6>
     53c:	00 d0       	rcall	.+0      	; 0x53e <UltimateO2Adapter_gimmeO2Flow+0x8>
     53e:	00 d0       	rcall	.+0      	; 0x540 <UltimateO2Adapter_gimmeO2Flow+0xa>
     540:	cd b7       	in	r28, 0x3d	; 61
     542:	de b7       	in	r29, 0x3e	; 62
     544:	9e 83       	std	Y+6, r25	; 0x06
     546:	8d 83       	std	Y+5, r24	; 0x05
	double totalFlow;

	// Convert from liters/hr to cc/min
	totalFlow = (me->itsUltimateO2SensorProxy->accessGasFlow(me->itsUltimateO2SensorProxy)) * 1000.0 / 60.0;
     548:	8d 81       	ldd	r24, Y+5	; 0x05
     54a:	9e 81       	ldd	r25, Y+6	; 0x06
     54c:	fc 01       	movw	r30, r24
     54e:	80 81       	ld	r24, Z
     550:	91 81       	ldd	r25, Z+1	; 0x01
     552:	fc 01       	movw	r30, r24
     554:	24 81       	ldd	r18, Z+4	; 0x04
     556:	35 81       	ldd	r19, Z+5	; 0x05
     558:	8d 81       	ldd	r24, Y+5	; 0x05
     55a:	9e 81       	ldd	r25, Y+6	; 0x06
     55c:	fc 01       	movw	r30, r24
     55e:	80 81       	ld	r24, Z
     560:	91 81       	ldd	r25, Z+1	; 0x01
     562:	f9 01       	movw	r30, r18
     564:	09 95       	icall
     566:	dc 01       	movw	r26, r24
     568:	cb 01       	movw	r24, r22
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	4a e7       	ldi	r20, 0x7A	; 122
     570:	54 e4       	ldi	r21, 0x44	; 68
     572:	bc 01       	movw	r22, r24
     574:	cd 01       	movw	r24, r26
     576:	81 d1       	rcall	.+770    	; 0x87a <__mulsf3>
     578:	dc 01       	movw	r26, r24
     57a:	cb 01       	movw	r24, r22
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	40 e7       	ldi	r20, 0x70	; 112
     582:	52 e4       	ldi	r21, 0x42	; 66
     584:	bc 01       	movw	r22, r24
     586:	cd 01       	movw	r24, r26
     588:	8e d0       	rcall	.+284    	; 0x6a6 <__divsf3>
     58a:	dc 01       	movw	r26, r24
     58c:	cb 01       	movw	r24, r22
     58e:	89 83       	std	Y+1, r24	; 0x01
     590:	9a 83       	std	Y+2, r25	; 0x02
     592:	ab 83       	std	Y+3, r26	; 0x03
     594:	bc 83       	std	Y+4, r27	; 0x04
	return (int)(totalFlow * me->itsUltimateO2SensorProxy->accessO2Conc(me->itsUltimateO2SensorProxy));
     596:	8d 81       	ldd	r24, Y+5	; 0x05
     598:	9e 81       	ldd	r25, Y+6	; 0x06
     59a:	fc 01       	movw	r30, r24
     59c:	80 81       	ld	r24, Z
     59e:	91 81       	ldd	r25, Z+1	; 0x01
     5a0:	fc 01       	movw	r30, r24
     5a2:	22 81       	ldd	r18, Z+2	; 0x02
     5a4:	33 81       	ldd	r19, Z+3	; 0x03
     5a6:	8d 81       	ldd	r24, Y+5	; 0x05
     5a8:	9e 81       	ldd	r25, Y+6	; 0x06
     5aa:	fc 01       	movw	r30, r24
     5ac:	80 81       	ld	r24, Z
     5ae:	91 81       	ldd	r25, Z+1	; 0x01
     5b0:	f9 01       	movw	r30, r18
     5b2:	09 95       	icall
     5b4:	dc 01       	movw	r26, r24
     5b6:	cb 01       	movw	r24, r22
     5b8:	29 81       	ldd	r18, Y+1	; 0x01
     5ba:	3a 81       	ldd	r19, Y+2	; 0x02
     5bc:	4b 81       	ldd	r20, Y+3	; 0x03
     5be:	5c 81       	ldd	r21, Y+4	; 0x04
     5c0:	bc 01       	movw	r22, r24
     5c2:	cd 01       	movw	r24, r26
     5c4:	5a d1       	rcall	.+692    	; 0x87a <__mulsf3>
     5c6:	dc 01       	movw	r26, r24
     5c8:	cb 01       	movw	r24, r22
     5ca:	bc 01       	movw	r22, r24
     5cc:	cd 01       	movw	r24, r26
     5ce:	d3 d0       	rcall	.+422    	; 0x776 <__fixsfsi>
     5d0:	dc 01       	movw	r26, r24
     5d2:	cb 01       	movw	r24, r22
}
     5d4:	26 96       	adiw	r28, 0x06	; 6
     5d6:	0f b6       	in	r0, 0x3f	; 63
     5d8:	f8 94       	cli
     5da:	de bf       	out	0x3e, r29	; 62
     5dc:	0f be       	out	0x3f, r0	; 63
     5de:	cd bf       	out	0x3d, r28	; 61
     5e0:	df 91       	pop	r29
     5e2:	cf 91       	pop	r28
     5e4:	08 95       	ret

000005e6 <UltimateO2Adapter_configure>:

void UltimateO2Adapter_configure(UltimateO2Adapter* const me, UltimateO2SensorProxy* ultimateO2SensorProxy) {
     5e6:	cf 93       	push	r28
     5e8:	df 93       	push	r29
     5ea:	00 d0       	rcall	.+0      	; 0x5ec <UltimateO2Adapter_configure+0x6>
     5ec:	00 d0       	rcall	.+0      	; 0x5ee <UltimateO2Adapter_configure+0x8>
     5ee:	cd b7       	in	r28, 0x3d	; 61
     5f0:	de b7       	in	r29, 0x3e	; 62
     5f2:	9a 83       	std	Y+2, r25	; 0x02
     5f4:	89 83       	std	Y+1, r24	; 0x01
     5f6:	7c 83       	std	Y+4, r23	; 0x04
     5f8:	6b 83       	std	Y+3, r22	; 0x03
	me->itsUltimateO2SensorProxy = ultimateO2SensorProxy;
     5fa:	89 81       	ldd	r24, Y+1	; 0x01
     5fc:	9a 81       	ldd	r25, Y+2	; 0x02
     5fe:	2b 81       	ldd	r18, Y+3	; 0x03
     600:	3c 81       	ldd	r19, Y+4	; 0x04
     602:	fc 01       	movw	r30, r24
     604:	31 83       	std	Z+1, r19	; 0x01
     606:	20 83       	st	Z, r18
}
     608:	00 00       	nop
     60a:	0f 90       	pop	r0
     60c:	0f 90       	pop	r0
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
     612:	df 91       	pop	r29
     614:	cf 91       	pop	r28
     616:	08 95       	ret

00000618 <UltimateO2Adapter_Create>:

UltimateO2Adapter* UltimateO2Adapter_Create(void) {
     618:	cf 93       	push	r28
     61a:	df 93       	push	r29
     61c:	00 d0       	rcall	.+0      	; 0x61e <UltimateO2Adapter_Create+0x6>
     61e:	cd b7       	in	r28, 0x3d	; 61
	UltimateO2Adapter* me = (UltimateO2Adapter*)malloc(sizeof(UltimateO2Adapter));
     620:	de b7       	in	r29, 0x3e	; 62
     622:	86 e0       	ldi	r24, 0x06	; 6
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	c7 d1       	rcall	.+910    	; 0x9b6 <malloc>
     628:	9a 83       	std	Y+2, r25	; 0x02
     62a:	89 83       	std	Y+1, r24	; 0x01

	if (me != NULL) {
     62c:	89 81       	ldd	r24, Y+1	; 0x01
     62e:	9a 81       	ldd	r25, Y+2	; 0x02
     630:	89 2b       	or	r24, r25
		UltimateO2Adapter_Init(me);
     632:	19 f0       	breq	.+6      	; 0x63a <UltimateO2Adapter_Create+0x22>
     634:	89 81       	ldd	r24, Y+1	; 0x01
     636:	9a 81       	ldd	r25, Y+2	; 0x02
     638:	1b d0       	rcall	.+54     	; 0x670 <UltimateO2Adapter_Init>
	}

	return me;
     63a:	89 81       	ldd	r24, Y+1	; 0x01
     63c:	9a 81       	ldd	r25, Y+2	; 0x02
}
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	08 95       	ret

00000648 <UltimateO2Adapter_Destroy>:

void UltimateO2Adapter_Destroy(UltimateO2Adapter* const me) {
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	00 d0       	rcall	.+0      	; 0x64e <UltimateO2Adapter_Destroy+0x6>
     64e:	cd b7       	in	r28, 0x3d	; 61
     650:	de b7       	in	r29, 0x3e	; 62
     652:	9a 83       	std	Y+2, r25	; 0x02
	if (me != NULL) {
     654:	89 83       	std	Y+1, r24	; 0x01
     656:	89 81       	ldd	r24, Y+1	; 0x01
     658:	9a 81       	ldd	r25, Y+2	; 0x02
     65a:	89 2b       	or	r24, r25
		free(me);
     65c:	19 f0       	breq	.+6      	; 0x664 <UltimateO2Adapter_Destroy+0x1c>
     65e:	89 81       	ldd	r24, Y+1	; 0x01
     660:	9a 81       	ldd	r25, Y+2	; 0x02
     662:	41 d2       	rcall	.+1154   	; 0xae6 <free>
		//IO2Sensor_Cleanup(me);
	}
}
     664:	00 00       	nop
     666:	0f 90       	pop	r0
     668:	0f 90       	pop	r0
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	08 95       	ret

00000670 <UltimateO2Adapter_Init>:

void UltimateO2Adapter_Init(UltimateO2Adapter* const me) {
     670:	cf 93       	push	r28
     672:	df 93       	push	r29
     674:	00 d0       	rcall	.+0      	; 0x676 <UltimateO2Adapter_Init+0x6>
     676:	cd b7       	in	r28, 0x3d	; 61
     678:	de b7       	in	r29, 0x3e	; 62
     67a:	9a 83       	std	Y+2, r25	; 0x02
     67c:	89 83       	std	Y+1, r24	; 0x01
	me->gimmeO2Conc = UltimateO2Adapter_gimmeO2Conc;
     67e:	89 81       	ldd	r24, Y+1	; 0x01
     680:	9a 81       	ldd	r25, Y+2	; 0x02
     682:	22 e7       	ldi	r18, 0x72	; 114
     684:	32 e0       	ldi	r19, 0x02	; 2
     686:	fc 01       	movw	r30, r24
     688:	33 83       	std	Z+3, r19	; 0x03
     68a:	22 83       	std	Z+2, r18	; 0x02
	me->gimmeO2Flow = UltimateO2Adapter_gimmeO2Flow;
     68c:	89 81       	ldd	r24, Y+1	; 0x01
     68e:	9a 81       	ldd	r25, Y+2	; 0x02
     690:	2b e9       	ldi	r18, 0x9B	; 155
     692:	32 e0       	ldi	r19, 0x02	; 2
     694:	fc 01       	movw	r30, r24
     696:	35 83       	std	Z+5, r19	; 0x05
     698:	24 83       	std	Z+4, r18	; 0x04
     69a:	00 00       	nop
     69c:	0f 90       	pop	r0
     69e:	0f 90       	pop	r0
     6a0:	df 91       	pop	r29
     6a2:	cf 91       	pop	r28
     6a4:	08 95       	ret

000006a6 <__divsf3>:
     6a6:	0c d0       	rcall	.+24     	; 0x6c0 <__divsf3x>
     6a8:	ae c0       	rjmp	.+348    	; 0x806 <__fp_round>
     6aa:	a6 d0       	rcall	.+332    	; 0x7f8 <__fp_pscB>
     6ac:	40 f0       	brcs	.+16     	; 0x6be <__divsf3+0x18>
     6ae:	9d d0       	rcall	.+314    	; 0x7ea <__fp_pscA>
     6b0:	30 f0       	brcs	.+12     	; 0x6be <__divsf3+0x18>
     6b2:	21 f4       	brne	.+8      	; 0x6bc <__divsf3+0x16>
     6b4:	5f 3f       	cpi	r21, 0xFF	; 255
     6b6:	19 f0       	breq	.+6      	; 0x6be <__divsf3+0x18>
     6b8:	8f c0       	rjmp	.+286    	; 0x7d8 <__fp_inf>
     6ba:	51 11       	cpse	r21, r1
     6bc:	d8 c0       	rjmp	.+432    	; 0x86e <__fp_szero>
     6be:	92 c0       	rjmp	.+292    	; 0x7e4 <__fp_nan>

000006c0 <__divsf3x>:
     6c0:	b3 d0       	rcall	.+358    	; 0x828 <__fp_split3>
     6c2:	98 f3       	brcs	.-26     	; 0x6aa <__divsf3+0x4>

000006c4 <__divsf3_pse>:
     6c4:	99 23       	and	r25, r25
     6c6:	c9 f3       	breq	.-14     	; 0x6ba <__divsf3+0x14>
     6c8:	55 23       	and	r21, r21
     6ca:	b1 f3       	breq	.-20     	; 0x6b8 <__divsf3+0x12>
     6cc:	95 1b       	sub	r25, r21
     6ce:	55 0b       	sbc	r21, r21
     6d0:	bb 27       	eor	r27, r27
     6d2:	aa 27       	eor	r26, r26
     6d4:	62 17       	cp	r22, r18
     6d6:	73 07       	cpc	r23, r19
     6d8:	84 07       	cpc	r24, r20
     6da:	38 f0       	brcs	.+14     	; 0x6ea <__divsf3_pse+0x26>
     6dc:	9f 5f       	subi	r25, 0xFF	; 255
     6de:	5f 4f       	sbci	r21, 0xFF	; 255
     6e0:	22 0f       	add	r18, r18
     6e2:	33 1f       	adc	r19, r19
     6e4:	44 1f       	adc	r20, r20
     6e6:	aa 1f       	adc	r26, r26
     6e8:	a9 f3       	breq	.-22     	; 0x6d4 <__divsf3_pse+0x10>
     6ea:	33 d0       	rcall	.+102    	; 0x752 <__divsf3_pse+0x8e>
     6ec:	0e 2e       	mov	r0, r30
     6ee:	3a f0       	brmi	.+14     	; 0x6fe <__divsf3_pse+0x3a>
     6f0:	e0 e8       	ldi	r30, 0x80	; 128
     6f2:	30 d0       	rcall	.+96     	; 0x754 <__divsf3_pse+0x90>
     6f4:	91 50       	subi	r25, 0x01	; 1
     6f6:	50 40       	sbci	r21, 0x00	; 0
     6f8:	e6 95       	lsr	r30
     6fa:	00 1c       	adc	r0, r0
     6fc:	ca f7       	brpl	.-14     	; 0x6f0 <__divsf3_pse+0x2c>
     6fe:	29 d0       	rcall	.+82     	; 0x752 <__divsf3_pse+0x8e>
     700:	fe 2f       	mov	r31, r30
     702:	27 d0       	rcall	.+78     	; 0x752 <__divsf3_pse+0x8e>
     704:	66 0f       	add	r22, r22
     706:	77 1f       	adc	r23, r23
     708:	88 1f       	adc	r24, r24
     70a:	bb 1f       	adc	r27, r27
     70c:	26 17       	cp	r18, r22
     70e:	37 07       	cpc	r19, r23
     710:	48 07       	cpc	r20, r24
     712:	ab 07       	cpc	r26, r27
     714:	b0 e8       	ldi	r27, 0x80	; 128
     716:	09 f0       	breq	.+2      	; 0x71a <__divsf3_pse+0x56>
     718:	bb 0b       	sbc	r27, r27
     71a:	80 2d       	mov	r24, r0
     71c:	bf 01       	movw	r22, r30
     71e:	ff 27       	eor	r31, r31
     720:	93 58       	subi	r25, 0x83	; 131
     722:	5f 4f       	sbci	r21, 0xFF	; 255
     724:	2a f0       	brmi	.+10     	; 0x730 <__divsf3_pse+0x6c>
     726:	9e 3f       	cpi	r25, 0xFE	; 254
     728:	51 05       	cpc	r21, r1
     72a:	68 f0       	brcs	.+26     	; 0x746 <__divsf3_pse+0x82>
     72c:	55 c0       	rjmp	.+170    	; 0x7d8 <__fp_inf>
     72e:	9f c0       	rjmp	.+318    	; 0x86e <__fp_szero>
     730:	5f 3f       	cpi	r21, 0xFF	; 255
     732:	ec f3       	brlt	.-6      	; 0x72e <__divsf3_pse+0x6a>
     734:	98 3e       	cpi	r25, 0xE8	; 232
     736:	dc f3       	brlt	.-10     	; 0x72e <__divsf3_pse+0x6a>
     738:	86 95       	lsr	r24
     73a:	77 95       	ror	r23
     73c:	67 95       	ror	r22
     73e:	b7 95       	ror	r27
     740:	f7 95       	ror	r31
     742:	9f 5f       	subi	r25, 0xFF	; 255
     744:	c9 f7       	brne	.-14     	; 0x738 <__divsf3_pse+0x74>
     746:	88 0f       	add	r24, r24
     748:	91 1d       	adc	r25, r1
     74a:	96 95       	lsr	r25
     74c:	87 95       	ror	r24
     74e:	97 f9       	bld	r25, 7
     750:	08 95       	ret
     752:	e1 e0       	ldi	r30, 0x01	; 1
     754:	66 0f       	add	r22, r22
     756:	77 1f       	adc	r23, r23
     758:	88 1f       	adc	r24, r24
     75a:	bb 1f       	adc	r27, r27
     75c:	62 17       	cp	r22, r18
     75e:	73 07       	cpc	r23, r19
     760:	84 07       	cpc	r24, r20
     762:	ba 07       	cpc	r27, r26
     764:	20 f0       	brcs	.+8      	; 0x76e <__divsf3_pse+0xaa>
     766:	62 1b       	sub	r22, r18
     768:	73 0b       	sbc	r23, r19
     76a:	84 0b       	sbc	r24, r20
     76c:	ba 0b       	sbc	r27, r26
     76e:	ee 1f       	adc	r30, r30
     770:	88 f7       	brcc	.-30     	; 0x754 <__divsf3_pse+0x90>
     772:	e0 95       	com	r30
     774:	08 95       	ret

00000776 <__fixsfsi>:
     776:	04 d0       	rcall	.+8      	; 0x780 <__fixunssfsi>
     778:	68 94       	set
     77a:	b1 11       	cpse	r27, r1
     77c:	78 c0       	rjmp	.+240    	; 0x86e <__fp_szero>
     77e:	08 95       	ret

00000780 <__fixunssfsi>:
     780:	5b d0       	rcall	.+182    	; 0x838 <__fp_splitA>
     782:	88 f0       	brcs	.+34     	; 0x7a6 <__fixunssfsi+0x26>
     784:	9f 57       	subi	r25, 0x7F	; 127
     786:	90 f0       	brcs	.+36     	; 0x7ac <__fixunssfsi+0x2c>
     788:	b9 2f       	mov	r27, r25
     78a:	99 27       	eor	r25, r25
     78c:	b7 51       	subi	r27, 0x17	; 23
     78e:	a0 f0       	brcs	.+40     	; 0x7b8 <__fixunssfsi+0x38>
     790:	d1 f0       	breq	.+52     	; 0x7c6 <__fixunssfsi+0x46>
     792:	66 0f       	add	r22, r22
     794:	77 1f       	adc	r23, r23
     796:	88 1f       	adc	r24, r24
     798:	99 1f       	adc	r25, r25
     79a:	1a f0       	brmi	.+6      	; 0x7a2 <__fixunssfsi+0x22>
     79c:	ba 95       	dec	r27
     79e:	c9 f7       	brne	.-14     	; 0x792 <__fixunssfsi+0x12>
     7a0:	12 c0       	rjmp	.+36     	; 0x7c6 <__fixunssfsi+0x46>
     7a2:	b1 30       	cpi	r27, 0x01	; 1
     7a4:	81 f0       	breq	.+32     	; 0x7c6 <__fixunssfsi+0x46>
     7a6:	62 d0       	rcall	.+196    	; 0x86c <__fp_zero>
     7a8:	b1 e0       	ldi	r27, 0x01	; 1
     7aa:	08 95       	ret
     7ac:	5f c0       	rjmp	.+190    	; 0x86c <__fp_zero>
     7ae:	67 2f       	mov	r22, r23
     7b0:	78 2f       	mov	r23, r24
     7b2:	88 27       	eor	r24, r24
     7b4:	b8 5f       	subi	r27, 0xF8	; 248
     7b6:	39 f0       	breq	.+14     	; 0x7c6 <__fixunssfsi+0x46>
     7b8:	b9 3f       	cpi	r27, 0xF9	; 249
     7ba:	cc f3       	brlt	.-14     	; 0x7ae <__fixunssfsi+0x2e>
     7bc:	86 95       	lsr	r24
     7be:	77 95       	ror	r23
     7c0:	67 95       	ror	r22
     7c2:	b3 95       	inc	r27
     7c4:	d9 f7       	brne	.-10     	; 0x7bc <__fixunssfsi+0x3c>
     7c6:	3e f4       	brtc	.+14     	; 0x7d6 <__fixunssfsi+0x56>
     7c8:	90 95       	com	r25
     7ca:	80 95       	com	r24
     7cc:	70 95       	com	r23
     7ce:	61 95       	neg	r22
     7d0:	7f 4f       	sbci	r23, 0xFF	; 255
     7d2:	8f 4f       	sbci	r24, 0xFF	; 255
     7d4:	9f 4f       	sbci	r25, 0xFF	; 255
     7d6:	08 95       	ret

000007d8 <__fp_inf>:
     7d8:	97 f9       	bld	r25, 7
     7da:	9f 67       	ori	r25, 0x7F	; 127
     7dc:	80 e8       	ldi	r24, 0x80	; 128
     7de:	70 e0       	ldi	r23, 0x00	; 0
     7e0:	60 e0       	ldi	r22, 0x00	; 0
     7e2:	08 95       	ret

000007e4 <__fp_nan>:
     7e4:	9f ef       	ldi	r25, 0xFF	; 255
     7e6:	80 ec       	ldi	r24, 0xC0	; 192
     7e8:	08 95       	ret

000007ea <__fp_pscA>:
     7ea:	00 24       	eor	r0, r0
     7ec:	0a 94       	dec	r0
     7ee:	16 16       	cp	r1, r22
     7f0:	17 06       	cpc	r1, r23
     7f2:	18 06       	cpc	r1, r24
     7f4:	09 06       	cpc	r0, r25
     7f6:	08 95       	ret

000007f8 <__fp_pscB>:
     7f8:	00 24       	eor	r0, r0
     7fa:	0a 94       	dec	r0
     7fc:	12 16       	cp	r1, r18
     7fe:	13 06       	cpc	r1, r19
     800:	14 06       	cpc	r1, r20
     802:	05 06       	cpc	r0, r21
     804:	08 95       	ret

00000806 <__fp_round>:
     806:	09 2e       	mov	r0, r25
     808:	03 94       	inc	r0
     80a:	00 0c       	add	r0, r0
     80c:	11 f4       	brne	.+4      	; 0x812 <__fp_round+0xc>
     80e:	88 23       	and	r24, r24
     810:	52 f0       	brmi	.+20     	; 0x826 <__fp_round+0x20>
     812:	bb 0f       	add	r27, r27
     814:	40 f4       	brcc	.+16     	; 0x826 <__fp_round+0x20>
     816:	bf 2b       	or	r27, r31
     818:	11 f4       	brne	.+4      	; 0x81e <__fp_round+0x18>
     81a:	60 ff       	sbrs	r22, 0
     81c:	04 c0       	rjmp	.+8      	; 0x826 <__fp_round+0x20>
     81e:	6f 5f       	subi	r22, 0xFF	; 255
     820:	7f 4f       	sbci	r23, 0xFF	; 255
     822:	8f 4f       	sbci	r24, 0xFF	; 255
     824:	9f 4f       	sbci	r25, 0xFF	; 255
     826:	08 95       	ret

00000828 <__fp_split3>:
     828:	57 fd       	sbrc	r21, 7
     82a:	90 58       	subi	r25, 0x80	; 128
     82c:	44 0f       	add	r20, r20
     82e:	55 1f       	adc	r21, r21
     830:	59 f0       	breq	.+22     	; 0x848 <__fp_splitA+0x10>
     832:	5f 3f       	cpi	r21, 0xFF	; 255
     834:	71 f0       	breq	.+28     	; 0x852 <__fp_splitA+0x1a>
     836:	47 95       	ror	r20

00000838 <__fp_splitA>:
     838:	88 0f       	add	r24, r24
     83a:	97 fb       	bst	r25, 7
     83c:	99 1f       	adc	r25, r25
     83e:	61 f0       	breq	.+24     	; 0x858 <__fp_splitA+0x20>
     840:	9f 3f       	cpi	r25, 0xFF	; 255
     842:	79 f0       	breq	.+30     	; 0x862 <__fp_splitA+0x2a>
     844:	87 95       	ror	r24
     846:	08 95       	ret
     848:	12 16       	cp	r1, r18
     84a:	13 06       	cpc	r1, r19
     84c:	14 06       	cpc	r1, r20
     84e:	55 1f       	adc	r21, r21
     850:	f2 cf       	rjmp	.-28     	; 0x836 <__fp_split3+0xe>
     852:	46 95       	lsr	r20
     854:	f1 df       	rcall	.-30     	; 0x838 <__fp_splitA>
     856:	08 c0       	rjmp	.+16     	; 0x868 <__fp_splitA+0x30>
     858:	16 16       	cp	r1, r22
     85a:	17 06       	cpc	r1, r23
     85c:	18 06       	cpc	r1, r24
     85e:	99 1f       	adc	r25, r25
     860:	f1 cf       	rjmp	.-30     	; 0x844 <__fp_splitA+0xc>
     862:	86 95       	lsr	r24
     864:	71 05       	cpc	r23, r1
     866:	61 05       	cpc	r22, r1
     868:	08 94       	sec
     86a:	08 95       	ret

0000086c <__fp_zero>:
     86c:	e8 94       	clt

0000086e <__fp_szero>:
     86e:	bb 27       	eor	r27, r27
     870:	66 27       	eor	r22, r22
     872:	77 27       	eor	r23, r23
     874:	cb 01       	movw	r24, r22
     876:	97 f9       	bld	r25, 7
     878:	08 95       	ret

0000087a <__mulsf3>:
     87a:	0b d0       	rcall	.+22     	; 0x892 <__mulsf3x>
     87c:	c4 cf       	rjmp	.-120    	; 0x806 <__fp_round>
     87e:	b5 df       	rcall	.-150    	; 0x7ea <__fp_pscA>
     880:	28 f0       	brcs	.+10     	; 0x88c <__mulsf3+0x12>
     882:	ba df       	rcall	.-140    	; 0x7f8 <__fp_pscB>
     884:	18 f0       	brcs	.+6      	; 0x88c <__mulsf3+0x12>
     886:	95 23       	and	r25, r21
     888:	09 f0       	breq	.+2      	; 0x88c <__mulsf3+0x12>
     88a:	a6 cf       	rjmp	.-180    	; 0x7d8 <__fp_inf>
     88c:	ab cf       	rjmp	.-170    	; 0x7e4 <__fp_nan>
     88e:	11 24       	eor	r1, r1
     890:	ee cf       	rjmp	.-36     	; 0x86e <__fp_szero>

00000892 <__mulsf3x>:
     892:	ca df       	rcall	.-108    	; 0x828 <__fp_split3>
     894:	a0 f3       	brcs	.-24     	; 0x87e <__mulsf3+0x4>

00000896 <__mulsf3_pse>:
     896:	95 9f       	mul	r25, r21
     898:	d1 f3       	breq	.-12     	; 0x88e <__mulsf3+0x14>
     89a:	95 0f       	add	r25, r21
     89c:	50 e0       	ldi	r21, 0x00	; 0
     89e:	55 1f       	adc	r21, r21
     8a0:	62 9f       	mul	r22, r18
     8a2:	f0 01       	movw	r30, r0
     8a4:	72 9f       	mul	r23, r18
     8a6:	bb 27       	eor	r27, r27
     8a8:	f0 0d       	add	r31, r0
     8aa:	b1 1d       	adc	r27, r1
     8ac:	63 9f       	mul	r22, r19
     8ae:	aa 27       	eor	r26, r26
     8b0:	f0 0d       	add	r31, r0
     8b2:	b1 1d       	adc	r27, r1
     8b4:	aa 1f       	adc	r26, r26
     8b6:	64 9f       	mul	r22, r20
     8b8:	66 27       	eor	r22, r22
     8ba:	b0 0d       	add	r27, r0
     8bc:	a1 1d       	adc	r26, r1
     8be:	66 1f       	adc	r22, r22
     8c0:	82 9f       	mul	r24, r18
     8c2:	22 27       	eor	r18, r18
     8c4:	b0 0d       	add	r27, r0
     8c6:	a1 1d       	adc	r26, r1
     8c8:	62 1f       	adc	r22, r18
     8ca:	73 9f       	mul	r23, r19
     8cc:	b0 0d       	add	r27, r0
     8ce:	a1 1d       	adc	r26, r1
     8d0:	62 1f       	adc	r22, r18
     8d2:	83 9f       	mul	r24, r19
     8d4:	a0 0d       	add	r26, r0
     8d6:	61 1d       	adc	r22, r1
     8d8:	22 1f       	adc	r18, r18
     8da:	74 9f       	mul	r23, r20
     8dc:	33 27       	eor	r19, r19
     8de:	a0 0d       	add	r26, r0
     8e0:	61 1d       	adc	r22, r1
     8e2:	23 1f       	adc	r18, r19
     8e4:	84 9f       	mul	r24, r20
     8e6:	60 0d       	add	r22, r0
     8e8:	21 1d       	adc	r18, r1
     8ea:	82 2f       	mov	r24, r18
     8ec:	76 2f       	mov	r23, r22
     8ee:	6a 2f       	mov	r22, r26
     8f0:	11 24       	eor	r1, r1
     8f2:	9f 57       	subi	r25, 0x7F	; 127
     8f4:	50 40       	sbci	r21, 0x00	; 0
     8f6:	8a f0       	brmi	.+34     	; 0x91a <__mulsf3_pse+0x84>
     8f8:	e1 f0       	breq	.+56     	; 0x932 <__mulsf3_pse+0x9c>
     8fa:	88 23       	and	r24, r24
     8fc:	4a f0       	brmi	.+18     	; 0x910 <__mulsf3_pse+0x7a>
     8fe:	ee 0f       	add	r30, r30
     900:	ff 1f       	adc	r31, r31
     902:	bb 1f       	adc	r27, r27
     904:	66 1f       	adc	r22, r22
     906:	77 1f       	adc	r23, r23
     908:	88 1f       	adc	r24, r24
     90a:	91 50       	subi	r25, 0x01	; 1
     90c:	50 40       	sbci	r21, 0x00	; 0
     90e:	a9 f7       	brne	.-22     	; 0x8fa <__mulsf3_pse+0x64>
     910:	9e 3f       	cpi	r25, 0xFE	; 254
     912:	51 05       	cpc	r21, r1
     914:	70 f0       	brcs	.+28     	; 0x932 <__mulsf3_pse+0x9c>
     916:	60 cf       	rjmp	.-320    	; 0x7d8 <__fp_inf>
     918:	aa cf       	rjmp	.-172    	; 0x86e <__fp_szero>
     91a:	5f 3f       	cpi	r21, 0xFF	; 255
     91c:	ec f3       	brlt	.-6      	; 0x918 <__mulsf3_pse+0x82>
     91e:	98 3e       	cpi	r25, 0xE8	; 232
     920:	dc f3       	brlt	.-10     	; 0x918 <__mulsf3_pse+0x82>
     922:	86 95       	lsr	r24
     924:	77 95       	ror	r23
     926:	67 95       	ror	r22
     928:	b7 95       	ror	r27
     92a:	f7 95       	ror	r31
     92c:	e7 95       	ror	r30
     92e:	9f 5f       	subi	r25, 0xFF	; 255
     930:	c1 f7       	brne	.-16     	; 0x922 <__mulsf3_pse+0x8c>
     932:	fe 2b       	or	r31, r30
     934:	88 0f       	add	r24, r24
     936:	91 1d       	adc	r25, r1
     938:	96 95       	lsr	r25
     93a:	87 95       	ror	r24
     93c:	97 f9       	bld	r25, 7
     93e:	08 95       	ret

00000940 <__udivmodsi4>:
     940:	a1 e2       	ldi	r26, 0x21	; 33
     942:	1a 2e       	mov	r1, r26
     944:	aa 1b       	sub	r26, r26
     946:	bb 1b       	sub	r27, r27
     948:	fd 01       	movw	r30, r26
     94a:	0d c0       	rjmp	.+26     	; 0x966 <__udivmodsi4_ep>

0000094c <__udivmodsi4_loop>:
     94c:	aa 1f       	adc	r26, r26
     94e:	bb 1f       	adc	r27, r27
     950:	ee 1f       	adc	r30, r30
     952:	ff 1f       	adc	r31, r31
     954:	a2 17       	cp	r26, r18
     956:	b3 07       	cpc	r27, r19
     958:	e4 07       	cpc	r30, r20
     95a:	f5 07       	cpc	r31, r21
     95c:	20 f0       	brcs	.+8      	; 0x966 <__udivmodsi4_ep>
     95e:	a2 1b       	sub	r26, r18
     960:	b3 0b       	sbc	r27, r19
     962:	e4 0b       	sbc	r30, r20
     964:	f5 0b       	sbc	r31, r21

00000966 <__udivmodsi4_ep>:
     966:	66 1f       	adc	r22, r22
     968:	77 1f       	adc	r23, r23
     96a:	88 1f       	adc	r24, r24
     96c:	99 1f       	adc	r25, r25
     96e:	1a 94       	dec	r1
     970:	69 f7       	brne	.-38     	; 0x94c <__udivmodsi4_loop>
     972:	60 95       	com	r22
     974:	70 95       	com	r23
     976:	80 95       	com	r24
     978:	90 95       	com	r25
     97a:	9b 01       	movw	r18, r22
     97c:	ac 01       	movw	r20, r24
     97e:	bd 01       	movw	r22, r26
     980:	cf 01       	movw	r24, r30
     982:	08 95       	ret

00000984 <__muluhisi3>:
     984:	09 d0       	rcall	.+18     	; 0x998 <__umulhisi3>
     986:	a5 9f       	mul	r26, r21
     988:	90 0d       	add	r25, r0
     98a:	b4 9f       	mul	r27, r20
     98c:	90 0d       	add	r25, r0
     98e:	a4 9f       	mul	r26, r20
     990:	80 0d       	add	r24, r0
     992:	91 1d       	adc	r25, r1
     994:	11 24       	eor	r1, r1
     996:	08 95       	ret

00000998 <__umulhisi3>:
     998:	a2 9f       	mul	r26, r18
     99a:	b0 01       	movw	r22, r0
     99c:	b3 9f       	mul	r27, r19
     99e:	c0 01       	movw	r24, r0
     9a0:	a3 9f       	mul	r26, r19
     9a2:	70 0d       	add	r23, r0
     9a4:	81 1d       	adc	r24, r1
     9a6:	11 24       	eor	r1, r1
     9a8:	91 1d       	adc	r25, r1
     9aa:	b2 9f       	mul	r27, r18
     9ac:	70 0d       	add	r23, r0
     9ae:	81 1d       	adc	r24, r1
     9b0:	11 24       	eor	r1, r1
     9b2:	91 1d       	adc	r25, r1
     9b4:	08 95       	ret

000009b6 <malloc>:
     9b6:	0f 93       	push	r16
     9b8:	1f 93       	push	r17
     9ba:	cf 93       	push	r28
     9bc:	df 93       	push	r29
     9be:	82 30       	cpi	r24, 0x02	; 2
     9c0:	91 05       	cpc	r25, r1
     9c2:	10 f4       	brcc	.+4      	; 0x9c8 <malloc+0x12>
     9c4:	82 e0       	ldi	r24, 0x02	; 2
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <__flp>
     9cc:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <__flp+0x1>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	a0 e0       	ldi	r26, 0x00	; 0
     9d6:	b0 e0       	ldi	r27, 0x00	; 0
     9d8:	30 97       	sbiw	r30, 0x00	; 0
     9da:	19 f1       	breq	.+70     	; 0xa22 <malloc+0x6c>
     9dc:	40 81       	ld	r20, Z
     9de:	51 81       	ldd	r21, Z+1	; 0x01
     9e0:	02 81       	ldd	r16, Z+2	; 0x02
     9e2:	13 81       	ldd	r17, Z+3	; 0x03
     9e4:	48 17       	cp	r20, r24
     9e6:	59 07       	cpc	r21, r25
     9e8:	c8 f0       	brcs	.+50     	; 0xa1c <malloc+0x66>
     9ea:	84 17       	cp	r24, r20
     9ec:	95 07       	cpc	r25, r21
     9ee:	69 f4       	brne	.+26     	; 0xa0a <malloc+0x54>
     9f0:	10 97       	sbiw	r26, 0x00	; 0
     9f2:	31 f0       	breq	.+12     	; 0xa00 <malloc+0x4a>
     9f4:	12 96       	adiw	r26, 0x02	; 2
     9f6:	0c 93       	st	X, r16
     9f8:	12 97       	sbiw	r26, 0x02	; 2
     9fa:	13 96       	adiw	r26, 0x03	; 3
     9fc:	1c 93       	st	X, r17
     9fe:	27 c0       	rjmp	.+78     	; 0xa4e <malloc+0x98>
     a00:	00 93 2c 01 	sts	0x012C, r16	; 0x80012c <__flp>
     a04:	10 93 2d 01 	sts	0x012D, r17	; 0x80012d <__flp+0x1>
     a08:	22 c0       	rjmp	.+68     	; 0xa4e <malloc+0x98>
     a0a:	21 15       	cp	r18, r1
     a0c:	31 05       	cpc	r19, r1
     a0e:	19 f0       	breq	.+6      	; 0xa16 <malloc+0x60>
     a10:	42 17       	cp	r20, r18
     a12:	53 07       	cpc	r21, r19
     a14:	18 f4       	brcc	.+6      	; 0xa1c <malloc+0x66>
     a16:	9a 01       	movw	r18, r20
     a18:	bd 01       	movw	r22, r26
     a1a:	ef 01       	movw	r28, r30
     a1c:	df 01       	movw	r26, r30
     a1e:	f8 01       	movw	r30, r16
     a20:	db cf       	rjmp	.-74     	; 0x9d8 <malloc+0x22>
     a22:	21 15       	cp	r18, r1
     a24:	31 05       	cpc	r19, r1
     a26:	f9 f0       	breq	.+62     	; 0xa66 <malloc+0xb0>
     a28:	28 1b       	sub	r18, r24
     a2a:	39 0b       	sbc	r19, r25
     a2c:	24 30       	cpi	r18, 0x04	; 4
     a2e:	31 05       	cpc	r19, r1
     a30:	80 f4       	brcc	.+32     	; 0xa52 <malloc+0x9c>
     a32:	8a 81       	ldd	r24, Y+2	; 0x02
     a34:	9b 81       	ldd	r25, Y+3	; 0x03
     a36:	61 15       	cp	r22, r1
     a38:	71 05       	cpc	r23, r1
     a3a:	21 f0       	breq	.+8      	; 0xa44 <malloc+0x8e>
     a3c:	fb 01       	movw	r30, r22
     a3e:	93 83       	std	Z+3, r25	; 0x03
     a40:	82 83       	std	Z+2, r24	; 0x02
     a42:	04 c0       	rjmp	.+8      	; 0xa4c <malloc+0x96>
     a44:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__flp+0x1>
     a48:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__flp>
     a4c:	fe 01       	movw	r30, r28
     a4e:	32 96       	adiw	r30, 0x02	; 2
     a50:	44 c0       	rjmp	.+136    	; 0xada <malloc+0x124>
     a52:	fe 01       	movw	r30, r28
     a54:	e2 0f       	add	r30, r18
     a56:	f3 1f       	adc	r31, r19
     a58:	81 93       	st	Z+, r24
     a5a:	91 93       	st	Z+, r25
     a5c:	22 50       	subi	r18, 0x02	; 2
     a5e:	31 09       	sbc	r19, r1
     a60:	39 83       	std	Y+1, r19	; 0x01
     a62:	28 83       	st	Y, r18
     a64:	3a c0       	rjmp	.+116    	; 0xada <malloc+0x124>
     a66:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <__data_end>
     a6a:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <__data_end+0x1>
     a6e:	23 2b       	or	r18, r19
     a70:	41 f4       	brne	.+16     	; 0xa82 <malloc+0xcc>
     a72:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     a76:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     a7a:	30 93 2b 01 	sts	0x012B, r19	; 0x80012b <__data_end+0x1>
     a7e:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <__data_end>
     a82:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     a86:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     a8a:	21 15       	cp	r18, r1
     a8c:	31 05       	cpc	r19, r1
     a8e:	41 f4       	brne	.+16     	; 0xaa0 <malloc+0xea>
     a90:	2d b7       	in	r18, 0x3d	; 61
     a92:	3e b7       	in	r19, 0x3e	; 62
     a94:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     a98:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     a9c:	24 1b       	sub	r18, r20
     a9e:	35 0b       	sbc	r19, r21
     aa0:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <__data_end>
     aa4:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <__data_end+0x1>
     aa8:	e2 17       	cp	r30, r18
     aaa:	f3 07       	cpc	r31, r19
     aac:	a0 f4       	brcc	.+40     	; 0xad6 <malloc+0x120>
     aae:	2e 1b       	sub	r18, r30
     ab0:	3f 0b       	sbc	r19, r31
     ab2:	28 17       	cp	r18, r24
     ab4:	39 07       	cpc	r19, r25
     ab6:	78 f0       	brcs	.+30     	; 0xad6 <malloc+0x120>
     ab8:	ac 01       	movw	r20, r24
     aba:	4e 5f       	subi	r20, 0xFE	; 254
     abc:	5f 4f       	sbci	r21, 0xFF	; 255
     abe:	24 17       	cp	r18, r20
     ac0:	35 07       	cpc	r19, r21
     ac2:	48 f0       	brcs	.+18     	; 0xad6 <malloc+0x120>
     ac4:	4e 0f       	add	r20, r30
     ac6:	5f 1f       	adc	r21, r31
     ac8:	50 93 2b 01 	sts	0x012B, r21	; 0x80012b <__data_end+0x1>
     acc:	40 93 2a 01 	sts	0x012A, r20	; 0x80012a <__data_end>
     ad0:	81 93       	st	Z+, r24
     ad2:	91 93       	st	Z+, r25
     ad4:	02 c0       	rjmp	.+4      	; 0xada <malloc+0x124>
     ad6:	e0 e0       	ldi	r30, 0x00	; 0
     ad8:	f0 e0       	ldi	r31, 0x00	; 0
     ada:	cf 01       	movw	r24, r30
     adc:	df 91       	pop	r29
     ade:	cf 91       	pop	r28
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	08 95       	ret

00000ae6 <free>:
     ae6:	cf 93       	push	r28
     ae8:	df 93       	push	r29
     aea:	00 97       	sbiw	r24, 0x00	; 0
     aec:	09 f4       	brne	.+2      	; 0xaf0 <free+0xa>
     aee:	81 c0       	rjmp	.+258    	; 0xbf2 <free+0x10c>
     af0:	fc 01       	movw	r30, r24
     af2:	32 97       	sbiw	r30, 0x02	; 2
     af4:	13 82       	std	Z+3, r1	; 0x03
     af6:	12 82       	std	Z+2, r1	; 0x02
     af8:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <__flp>
     afc:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <__flp+0x1>
     b00:	10 97       	sbiw	r26, 0x00	; 0
     b02:	81 f4       	brne	.+32     	; 0xb24 <free+0x3e>
     b04:	20 81       	ld	r18, Z
     b06:	31 81       	ldd	r19, Z+1	; 0x01
     b08:	82 0f       	add	r24, r18
     b0a:	93 1f       	adc	r25, r19
     b0c:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <__data_end>
     b10:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <__data_end+0x1>
     b14:	28 17       	cp	r18, r24
     b16:	39 07       	cpc	r19, r25
     b18:	51 f5       	brne	.+84     	; 0xb6e <free+0x88>
     b1a:	f0 93 2b 01 	sts	0x012B, r31	; 0x80012b <__data_end+0x1>
     b1e:	e0 93 2a 01 	sts	0x012A, r30	; 0x80012a <__data_end>
     b22:	67 c0       	rjmp	.+206    	; 0xbf2 <free+0x10c>
     b24:	ed 01       	movw	r28, r26
     b26:	20 e0       	ldi	r18, 0x00	; 0
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	ce 17       	cp	r28, r30
     b2c:	df 07       	cpc	r29, r31
     b2e:	40 f4       	brcc	.+16     	; 0xb40 <free+0x5a>
     b30:	4a 81       	ldd	r20, Y+2	; 0x02
     b32:	5b 81       	ldd	r21, Y+3	; 0x03
     b34:	9e 01       	movw	r18, r28
     b36:	41 15       	cp	r20, r1
     b38:	51 05       	cpc	r21, r1
     b3a:	f1 f0       	breq	.+60     	; 0xb78 <free+0x92>
     b3c:	ea 01       	movw	r28, r20
     b3e:	f5 cf       	rjmp	.-22     	; 0xb2a <free+0x44>
     b40:	d3 83       	std	Z+3, r29	; 0x03
     b42:	c2 83       	std	Z+2, r28	; 0x02
     b44:	40 81       	ld	r20, Z
     b46:	51 81       	ldd	r21, Z+1	; 0x01
     b48:	84 0f       	add	r24, r20
     b4a:	95 1f       	adc	r25, r21
     b4c:	c8 17       	cp	r28, r24
     b4e:	d9 07       	cpc	r29, r25
     b50:	59 f4       	brne	.+22     	; 0xb68 <free+0x82>
     b52:	88 81       	ld	r24, Y
     b54:	99 81       	ldd	r25, Y+1	; 0x01
     b56:	84 0f       	add	r24, r20
     b58:	95 1f       	adc	r25, r21
     b5a:	02 96       	adiw	r24, 0x02	; 2
     b5c:	91 83       	std	Z+1, r25	; 0x01
     b5e:	80 83       	st	Z, r24
     b60:	8a 81       	ldd	r24, Y+2	; 0x02
     b62:	9b 81       	ldd	r25, Y+3	; 0x03
     b64:	93 83       	std	Z+3, r25	; 0x03
     b66:	82 83       	std	Z+2, r24	; 0x02
     b68:	21 15       	cp	r18, r1
     b6a:	31 05       	cpc	r19, r1
     b6c:	29 f4       	brne	.+10     	; 0xb78 <free+0x92>
     b6e:	f0 93 2d 01 	sts	0x012D, r31	; 0x80012d <__flp+0x1>
     b72:	e0 93 2c 01 	sts	0x012C, r30	; 0x80012c <__flp>
     b76:	3d c0       	rjmp	.+122    	; 0xbf2 <free+0x10c>
     b78:	e9 01       	movw	r28, r18
     b7a:	fb 83       	std	Y+3, r31	; 0x03
     b7c:	ea 83       	std	Y+2, r30	; 0x02
     b7e:	49 91       	ld	r20, Y+
     b80:	59 91       	ld	r21, Y+
     b82:	c4 0f       	add	r28, r20
     b84:	d5 1f       	adc	r29, r21
     b86:	ec 17       	cp	r30, r28
     b88:	fd 07       	cpc	r31, r29
     b8a:	61 f4       	brne	.+24     	; 0xba4 <free+0xbe>
     b8c:	80 81       	ld	r24, Z
     b8e:	91 81       	ldd	r25, Z+1	; 0x01
     b90:	84 0f       	add	r24, r20
     b92:	95 1f       	adc	r25, r21
     b94:	02 96       	adiw	r24, 0x02	; 2
     b96:	e9 01       	movw	r28, r18
     b98:	99 83       	std	Y+1, r25	; 0x01
     b9a:	88 83       	st	Y, r24
     b9c:	82 81       	ldd	r24, Z+2	; 0x02
     b9e:	93 81       	ldd	r25, Z+3	; 0x03
     ba0:	9b 83       	std	Y+3, r25	; 0x03
     ba2:	8a 83       	std	Y+2, r24	; 0x02
     ba4:	e0 e0       	ldi	r30, 0x00	; 0
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	12 96       	adiw	r26, 0x02	; 2
     baa:	8d 91       	ld	r24, X+
     bac:	9c 91       	ld	r25, X
     bae:	13 97       	sbiw	r26, 0x03	; 3
     bb0:	00 97       	sbiw	r24, 0x00	; 0
     bb2:	19 f0       	breq	.+6      	; 0xbba <free+0xd4>
     bb4:	fd 01       	movw	r30, r26
     bb6:	dc 01       	movw	r26, r24
     bb8:	f7 cf       	rjmp	.-18     	; 0xba8 <free+0xc2>
     bba:	8d 91       	ld	r24, X+
     bbc:	9c 91       	ld	r25, X
     bbe:	11 97       	sbiw	r26, 0x01	; 1
     bc0:	9d 01       	movw	r18, r26
     bc2:	2e 5f       	subi	r18, 0xFE	; 254
     bc4:	3f 4f       	sbci	r19, 0xFF	; 255
     bc6:	82 0f       	add	r24, r18
     bc8:	93 1f       	adc	r25, r19
     bca:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <__data_end>
     bce:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <__data_end+0x1>
     bd2:	28 17       	cp	r18, r24
     bd4:	39 07       	cpc	r19, r25
     bd6:	69 f4       	brne	.+26     	; 0xbf2 <free+0x10c>
     bd8:	30 97       	sbiw	r30, 0x00	; 0
     bda:	29 f4       	brne	.+10     	; 0xbe6 <free+0x100>
     bdc:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <__flp+0x1>
     be0:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <__flp>
     be4:	02 c0       	rjmp	.+4      	; 0xbea <free+0x104>
     be6:	13 82       	std	Z+3, r1	; 0x03
     be8:	12 82       	std	Z+2, r1	; 0x02
     bea:	b0 93 2b 01 	sts	0x012B, r27	; 0x80012b <__data_end+0x1>
     bee:	a0 93 2a 01 	sts	0x012A, r26	; 0x80012a <__data_end>
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	08 95       	ret

00000bf8 <printf>:
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	cd b7       	in	r28, 0x3d	; 61
     bfe:	de b7       	in	r29, 0x3e	; 62
     c00:	ae 01       	movw	r20, r28
     c02:	4b 5f       	subi	r20, 0xFB	; 251
     c04:	5f 4f       	sbci	r21, 0xFF	; 255
     c06:	fa 01       	movw	r30, r20
     c08:	61 91       	ld	r22, Z+
     c0a:	71 91       	ld	r23, Z+
     c0c:	af 01       	movw	r20, r30
     c0e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__iob+0x2>
     c12:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <__iob+0x3>
     c16:	03 d0       	rcall	.+6      	; 0xc1e <vfprintf>
     c18:	df 91       	pop	r29
     c1a:	cf 91       	pop	r28
     c1c:	08 95       	ret

00000c1e <vfprintf>:
     c1e:	2f 92       	push	r2
     c20:	3f 92       	push	r3
     c22:	4f 92       	push	r4
     c24:	5f 92       	push	r5
     c26:	6f 92       	push	r6
     c28:	7f 92       	push	r7
     c2a:	8f 92       	push	r8
     c2c:	9f 92       	push	r9
     c2e:	af 92       	push	r10
     c30:	bf 92       	push	r11
     c32:	cf 92       	push	r12
     c34:	df 92       	push	r13
     c36:	ef 92       	push	r14
     c38:	ff 92       	push	r15
     c3a:	0f 93       	push	r16
     c3c:	1f 93       	push	r17
     c3e:	cf 93       	push	r28
     c40:	df 93       	push	r29
     c42:	cd b7       	in	r28, 0x3d	; 61
     c44:	de b7       	in	r29, 0x3e	; 62
     c46:	2b 97       	sbiw	r28, 0x0b	; 11
     c48:	0f b6       	in	r0, 0x3f	; 63
     c4a:	f8 94       	cli
     c4c:	de bf       	out	0x3e, r29	; 62
     c4e:	0f be       	out	0x3f, r0	; 63
     c50:	cd bf       	out	0x3d, r28	; 61
     c52:	6c 01       	movw	r12, r24
     c54:	7b 01       	movw	r14, r22
     c56:	8a 01       	movw	r16, r20
     c58:	fc 01       	movw	r30, r24
     c5a:	17 82       	std	Z+7, r1	; 0x07
     c5c:	16 82       	std	Z+6, r1	; 0x06
     c5e:	83 81       	ldd	r24, Z+3	; 0x03
     c60:	81 ff       	sbrs	r24, 1
     c62:	bf c1       	rjmp	.+894    	; 0xfe2 <vfprintf+0x3c4>
     c64:	ce 01       	movw	r24, r28
     c66:	01 96       	adiw	r24, 0x01	; 1
     c68:	3c 01       	movw	r6, r24
     c6a:	f6 01       	movw	r30, r12
     c6c:	93 81       	ldd	r25, Z+3	; 0x03
     c6e:	f7 01       	movw	r30, r14
     c70:	93 fd       	sbrc	r25, 3
     c72:	85 91       	lpm	r24, Z+
     c74:	93 ff       	sbrs	r25, 3
     c76:	81 91       	ld	r24, Z+
     c78:	7f 01       	movw	r14, r30
     c7a:	88 23       	and	r24, r24
     c7c:	09 f4       	brne	.+2      	; 0xc80 <vfprintf+0x62>
     c7e:	ad c1       	rjmp	.+858    	; 0xfda <vfprintf+0x3bc>
     c80:	85 32       	cpi	r24, 0x25	; 37
     c82:	39 f4       	brne	.+14     	; 0xc92 <vfprintf+0x74>
     c84:	93 fd       	sbrc	r25, 3
     c86:	85 91       	lpm	r24, Z+
     c88:	93 ff       	sbrs	r25, 3
     c8a:	81 91       	ld	r24, Z+
     c8c:	7f 01       	movw	r14, r30
     c8e:	85 32       	cpi	r24, 0x25	; 37
     c90:	21 f4       	brne	.+8      	; 0xc9a <vfprintf+0x7c>
     c92:	b6 01       	movw	r22, r12
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	d6 d1       	rcall	.+940    	; 0x1044 <fputc>
     c98:	e8 cf       	rjmp	.-48     	; 0xc6a <vfprintf+0x4c>
     c9a:	91 2c       	mov	r9, r1
     c9c:	21 2c       	mov	r2, r1
     c9e:	31 2c       	mov	r3, r1
     ca0:	ff e1       	ldi	r31, 0x1F	; 31
     ca2:	f3 15       	cp	r31, r3
     ca4:	d8 f0       	brcs	.+54     	; 0xcdc <vfprintf+0xbe>
     ca6:	8b 32       	cpi	r24, 0x2B	; 43
     ca8:	79 f0       	breq	.+30     	; 0xcc8 <vfprintf+0xaa>
     caa:	38 f4       	brcc	.+14     	; 0xcba <vfprintf+0x9c>
     cac:	80 32       	cpi	r24, 0x20	; 32
     cae:	79 f0       	breq	.+30     	; 0xcce <vfprintf+0xb0>
     cb0:	83 32       	cpi	r24, 0x23	; 35
     cb2:	a1 f4       	brne	.+40     	; 0xcdc <vfprintf+0xbe>
     cb4:	23 2d       	mov	r18, r3
     cb6:	20 61       	ori	r18, 0x10	; 16
     cb8:	1d c0       	rjmp	.+58     	; 0xcf4 <vfprintf+0xd6>
     cba:	8d 32       	cpi	r24, 0x2D	; 45
     cbc:	61 f0       	breq	.+24     	; 0xcd6 <vfprintf+0xb8>
     cbe:	80 33       	cpi	r24, 0x30	; 48
     cc0:	69 f4       	brne	.+26     	; 0xcdc <vfprintf+0xbe>
     cc2:	23 2d       	mov	r18, r3
     cc4:	21 60       	ori	r18, 0x01	; 1
     cc6:	16 c0       	rjmp	.+44     	; 0xcf4 <vfprintf+0xd6>
     cc8:	83 2d       	mov	r24, r3
     cca:	82 60       	ori	r24, 0x02	; 2
     ccc:	38 2e       	mov	r3, r24
     cce:	e3 2d       	mov	r30, r3
     cd0:	e4 60       	ori	r30, 0x04	; 4
     cd2:	3e 2e       	mov	r3, r30
     cd4:	2a c0       	rjmp	.+84     	; 0xd2a <vfprintf+0x10c>
     cd6:	f3 2d       	mov	r31, r3
     cd8:	f8 60       	ori	r31, 0x08	; 8
     cda:	1d c0       	rjmp	.+58     	; 0xd16 <vfprintf+0xf8>
     cdc:	37 fc       	sbrc	r3, 7
     cde:	2d c0       	rjmp	.+90     	; 0xd3a <vfprintf+0x11c>
     ce0:	20 ed       	ldi	r18, 0xD0	; 208
     ce2:	28 0f       	add	r18, r24
     ce4:	2a 30       	cpi	r18, 0x0A	; 10
     ce6:	40 f0       	brcs	.+16     	; 0xcf8 <vfprintf+0xda>
     ce8:	8e 32       	cpi	r24, 0x2E	; 46
     cea:	b9 f4       	brne	.+46     	; 0xd1a <vfprintf+0xfc>
     cec:	36 fc       	sbrc	r3, 6
     cee:	75 c1       	rjmp	.+746    	; 0xfda <vfprintf+0x3bc>
     cf0:	23 2d       	mov	r18, r3
     cf2:	20 64       	ori	r18, 0x40	; 64
     cf4:	32 2e       	mov	r3, r18
     cf6:	19 c0       	rjmp	.+50     	; 0xd2a <vfprintf+0x10c>
     cf8:	36 fe       	sbrs	r3, 6
     cfa:	06 c0       	rjmp	.+12     	; 0xd08 <vfprintf+0xea>
     cfc:	8a e0       	ldi	r24, 0x0A	; 10
     cfe:	98 9e       	mul	r9, r24
     d00:	20 0d       	add	r18, r0
     d02:	11 24       	eor	r1, r1
     d04:	92 2e       	mov	r9, r18
     d06:	11 c0       	rjmp	.+34     	; 0xd2a <vfprintf+0x10c>
     d08:	ea e0       	ldi	r30, 0x0A	; 10
     d0a:	2e 9e       	mul	r2, r30
     d0c:	20 0d       	add	r18, r0
     d0e:	11 24       	eor	r1, r1
     d10:	22 2e       	mov	r2, r18
     d12:	f3 2d       	mov	r31, r3
     d14:	f0 62       	ori	r31, 0x20	; 32
     d16:	3f 2e       	mov	r3, r31
     d18:	08 c0       	rjmp	.+16     	; 0xd2a <vfprintf+0x10c>
     d1a:	8c 36       	cpi	r24, 0x6C	; 108
     d1c:	21 f4       	brne	.+8      	; 0xd26 <vfprintf+0x108>
     d1e:	83 2d       	mov	r24, r3
     d20:	80 68       	ori	r24, 0x80	; 128
     d22:	38 2e       	mov	r3, r24
     d24:	02 c0       	rjmp	.+4      	; 0xd2a <vfprintf+0x10c>
     d26:	88 36       	cpi	r24, 0x68	; 104
     d28:	41 f4       	brne	.+16     	; 0xd3a <vfprintf+0x11c>
     d2a:	f7 01       	movw	r30, r14
     d2c:	93 fd       	sbrc	r25, 3
     d2e:	85 91       	lpm	r24, Z+
     d30:	93 ff       	sbrs	r25, 3
     d32:	81 91       	ld	r24, Z+
     d34:	7f 01       	movw	r14, r30
     d36:	81 11       	cpse	r24, r1
     d38:	b3 cf       	rjmp	.-154    	; 0xca0 <vfprintf+0x82>
     d3a:	98 2f       	mov	r25, r24
     d3c:	9f 7d       	andi	r25, 0xDF	; 223
     d3e:	95 54       	subi	r25, 0x45	; 69
     d40:	93 30       	cpi	r25, 0x03	; 3
     d42:	28 f4       	brcc	.+10     	; 0xd4e <vfprintf+0x130>
     d44:	0c 5f       	subi	r16, 0xFC	; 252
     d46:	1f 4f       	sbci	r17, 0xFF	; 255
     d48:	9f e3       	ldi	r25, 0x3F	; 63
     d4a:	99 83       	std	Y+1, r25	; 0x01
     d4c:	0d c0       	rjmp	.+26     	; 0xd68 <vfprintf+0x14a>
     d4e:	83 36       	cpi	r24, 0x63	; 99
     d50:	31 f0       	breq	.+12     	; 0xd5e <vfprintf+0x140>
     d52:	83 37       	cpi	r24, 0x73	; 115
     d54:	71 f0       	breq	.+28     	; 0xd72 <vfprintf+0x154>
     d56:	83 35       	cpi	r24, 0x53	; 83
     d58:	09 f0       	breq	.+2      	; 0xd5c <vfprintf+0x13e>
     d5a:	55 c0       	rjmp	.+170    	; 0xe06 <vfprintf+0x1e8>
     d5c:	20 c0       	rjmp	.+64     	; 0xd9e <vfprintf+0x180>
     d5e:	f8 01       	movw	r30, r16
     d60:	80 81       	ld	r24, Z
     d62:	89 83       	std	Y+1, r24	; 0x01
     d64:	0e 5f       	subi	r16, 0xFE	; 254
     d66:	1f 4f       	sbci	r17, 0xFF	; 255
     d68:	88 24       	eor	r8, r8
     d6a:	83 94       	inc	r8
     d6c:	91 2c       	mov	r9, r1
     d6e:	53 01       	movw	r10, r6
     d70:	12 c0       	rjmp	.+36     	; 0xd96 <vfprintf+0x178>
     d72:	28 01       	movw	r4, r16
     d74:	f2 e0       	ldi	r31, 0x02	; 2
     d76:	4f 0e       	add	r4, r31
     d78:	51 1c       	adc	r5, r1
     d7a:	f8 01       	movw	r30, r16
     d7c:	a0 80       	ld	r10, Z
     d7e:	b1 80       	ldd	r11, Z+1	; 0x01
     d80:	36 fe       	sbrs	r3, 6
     d82:	03 c0       	rjmp	.+6      	; 0xd8a <vfprintf+0x16c>
     d84:	69 2d       	mov	r22, r9
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	02 c0       	rjmp	.+4      	; 0xd8e <vfprintf+0x170>
     d8a:	6f ef       	ldi	r22, 0xFF	; 255
     d8c:	7f ef       	ldi	r23, 0xFF	; 255
     d8e:	c5 01       	movw	r24, r10
     d90:	4e d1       	rcall	.+668    	; 0x102e <strnlen>
     d92:	4c 01       	movw	r8, r24
     d94:	82 01       	movw	r16, r4
     d96:	f3 2d       	mov	r31, r3
     d98:	ff 77       	andi	r31, 0x7F	; 127
     d9a:	3f 2e       	mov	r3, r31
     d9c:	15 c0       	rjmp	.+42     	; 0xdc8 <vfprintf+0x1aa>
     d9e:	28 01       	movw	r4, r16
     da0:	22 e0       	ldi	r18, 0x02	; 2
     da2:	42 0e       	add	r4, r18
     da4:	51 1c       	adc	r5, r1
     da6:	f8 01       	movw	r30, r16
     da8:	a0 80       	ld	r10, Z
     daa:	b1 80       	ldd	r11, Z+1	; 0x01
     dac:	36 fe       	sbrs	r3, 6
     dae:	03 c0       	rjmp	.+6      	; 0xdb6 <vfprintf+0x198>
     db0:	69 2d       	mov	r22, r9
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	02 c0       	rjmp	.+4      	; 0xdba <vfprintf+0x19c>
     db6:	6f ef       	ldi	r22, 0xFF	; 255
     db8:	7f ef       	ldi	r23, 0xFF	; 255
     dba:	c5 01       	movw	r24, r10
     dbc:	2d d1       	rcall	.+602    	; 0x1018 <strnlen_P>
     dbe:	4c 01       	movw	r8, r24
     dc0:	f3 2d       	mov	r31, r3
     dc2:	f0 68       	ori	r31, 0x80	; 128
     dc4:	3f 2e       	mov	r3, r31
     dc6:	82 01       	movw	r16, r4
     dc8:	33 fc       	sbrc	r3, 3
     dca:	19 c0       	rjmp	.+50     	; 0xdfe <vfprintf+0x1e0>
     dcc:	82 2d       	mov	r24, r2
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	88 16       	cp	r8, r24
     dd2:	99 06       	cpc	r9, r25
     dd4:	a0 f4       	brcc	.+40     	; 0xdfe <vfprintf+0x1e0>
     dd6:	b6 01       	movw	r22, r12
     dd8:	80 e2       	ldi	r24, 0x20	; 32
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	33 d1       	rcall	.+614    	; 0x1044 <fputc>
     dde:	2a 94       	dec	r2
     de0:	f5 cf       	rjmp	.-22     	; 0xdcc <vfprintf+0x1ae>
     de2:	f5 01       	movw	r30, r10
     de4:	37 fc       	sbrc	r3, 7
     de6:	85 91       	lpm	r24, Z+
     de8:	37 fe       	sbrs	r3, 7
     dea:	81 91       	ld	r24, Z+
     dec:	5f 01       	movw	r10, r30
     dee:	b6 01       	movw	r22, r12
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	28 d1       	rcall	.+592    	; 0x1044 <fputc>
     df4:	21 10       	cpse	r2, r1
     df6:	2a 94       	dec	r2
     df8:	21 e0       	ldi	r18, 0x01	; 1
     dfa:	82 1a       	sub	r8, r18
     dfc:	91 08       	sbc	r9, r1
     dfe:	81 14       	cp	r8, r1
     e00:	91 04       	cpc	r9, r1
     e02:	79 f7       	brne	.-34     	; 0xde2 <vfprintf+0x1c4>
     e04:	e1 c0       	rjmp	.+450    	; 0xfc8 <vfprintf+0x3aa>
     e06:	84 36       	cpi	r24, 0x64	; 100
     e08:	11 f0       	breq	.+4      	; 0xe0e <vfprintf+0x1f0>
     e0a:	89 36       	cpi	r24, 0x69	; 105
     e0c:	39 f5       	brne	.+78     	; 0xe5c <vfprintf+0x23e>
     e0e:	f8 01       	movw	r30, r16
     e10:	37 fe       	sbrs	r3, 7
     e12:	07 c0       	rjmp	.+14     	; 0xe22 <vfprintf+0x204>
     e14:	60 81       	ld	r22, Z
     e16:	71 81       	ldd	r23, Z+1	; 0x01
     e18:	82 81       	ldd	r24, Z+2	; 0x02
     e1a:	93 81       	ldd	r25, Z+3	; 0x03
     e1c:	0c 5f       	subi	r16, 0xFC	; 252
     e1e:	1f 4f       	sbci	r17, 0xFF	; 255
     e20:	08 c0       	rjmp	.+16     	; 0xe32 <vfprintf+0x214>
     e22:	60 81       	ld	r22, Z
     e24:	71 81       	ldd	r23, Z+1	; 0x01
     e26:	07 2e       	mov	r0, r23
     e28:	00 0c       	add	r0, r0
     e2a:	88 0b       	sbc	r24, r24
     e2c:	99 0b       	sbc	r25, r25
     e2e:	0e 5f       	subi	r16, 0xFE	; 254
     e30:	1f 4f       	sbci	r17, 0xFF	; 255
     e32:	f3 2d       	mov	r31, r3
     e34:	ff 76       	andi	r31, 0x6F	; 111
     e36:	3f 2e       	mov	r3, r31
     e38:	97 ff       	sbrs	r25, 7
     e3a:	09 c0       	rjmp	.+18     	; 0xe4e <vfprintf+0x230>
     e3c:	90 95       	com	r25
     e3e:	80 95       	com	r24
     e40:	70 95       	com	r23
     e42:	61 95       	neg	r22
     e44:	7f 4f       	sbci	r23, 0xFF	; 255
     e46:	8f 4f       	sbci	r24, 0xFF	; 255
     e48:	9f 4f       	sbci	r25, 0xFF	; 255
     e4a:	f0 68       	ori	r31, 0x80	; 128
     e4c:	3f 2e       	mov	r3, r31
     e4e:	2a e0       	ldi	r18, 0x0A	; 10
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	a3 01       	movw	r20, r6
     e54:	33 d1       	rcall	.+614    	; 0x10bc <__ultoa_invert>
     e56:	88 2e       	mov	r8, r24
     e58:	86 18       	sub	r8, r6
     e5a:	44 c0       	rjmp	.+136    	; 0xee4 <vfprintf+0x2c6>
     e5c:	85 37       	cpi	r24, 0x75	; 117
     e5e:	31 f4       	brne	.+12     	; 0xe6c <vfprintf+0x24e>
     e60:	23 2d       	mov	r18, r3
     e62:	2f 7e       	andi	r18, 0xEF	; 239
     e64:	b2 2e       	mov	r11, r18
     e66:	2a e0       	ldi	r18, 0x0A	; 10
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	25 c0       	rjmp	.+74     	; 0xeb6 <vfprintf+0x298>
     e6c:	93 2d       	mov	r25, r3
     e6e:	99 7f       	andi	r25, 0xF9	; 249
     e70:	b9 2e       	mov	r11, r25
     e72:	8f 36       	cpi	r24, 0x6F	; 111
     e74:	c1 f0       	breq	.+48     	; 0xea6 <vfprintf+0x288>
     e76:	18 f4       	brcc	.+6      	; 0xe7e <vfprintf+0x260>
     e78:	88 35       	cpi	r24, 0x58	; 88
     e7a:	79 f0       	breq	.+30     	; 0xe9a <vfprintf+0x27c>
     e7c:	ae c0       	rjmp	.+348    	; 0xfda <vfprintf+0x3bc>
     e7e:	80 37       	cpi	r24, 0x70	; 112
     e80:	19 f0       	breq	.+6      	; 0xe88 <vfprintf+0x26a>
     e82:	88 37       	cpi	r24, 0x78	; 120
     e84:	21 f0       	breq	.+8      	; 0xe8e <vfprintf+0x270>
     e86:	a9 c0       	rjmp	.+338    	; 0xfda <vfprintf+0x3bc>
     e88:	e9 2f       	mov	r30, r25
     e8a:	e0 61       	ori	r30, 0x10	; 16
     e8c:	be 2e       	mov	r11, r30
     e8e:	b4 fe       	sbrs	r11, 4
     e90:	0d c0       	rjmp	.+26     	; 0xeac <vfprintf+0x28e>
     e92:	fb 2d       	mov	r31, r11
     e94:	f4 60       	ori	r31, 0x04	; 4
     e96:	bf 2e       	mov	r11, r31
     e98:	09 c0       	rjmp	.+18     	; 0xeac <vfprintf+0x28e>
     e9a:	34 fe       	sbrs	r3, 4
     e9c:	0a c0       	rjmp	.+20     	; 0xeb2 <vfprintf+0x294>
     e9e:	29 2f       	mov	r18, r25
     ea0:	26 60       	ori	r18, 0x06	; 6
     ea2:	b2 2e       	mov	r11, r18
     ea4:	06 c0       	rjmp	.+12     	; 0xeb2 <vfprintf+0x294>
     ea6:	28 e0       	ldi	r18, 0x08	; 8
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	05 c0       	rjmp	.+10     	; 0xeb6 <vfprintf+0x298>
     eac:	20 e1       	ldi	r18, 0x10	; 16
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <vfprintf+0x298>
     eb2:	20 e1       	ldi	r18, 0x10	; 16
     eb4:	32 e0       	ldi	r19, 0x02	; 2
     eb6:	f8 01       	movw	r30, r16
     eb8:	b7 fe       	sbrs	r11, 7
     eba:	07 c0       	rjmp	.+14     	; 0xeca <vfprintf+0x2ac>
     ebc:	60 81       	ld	r22, Z
     ebe:	71 81       	ldd	r23, Z+1	; 0x01
     ec0:	82 81       	ldd	r24, Z+2	; 0x02
     ec2:	93 81       	ldd	r25, Z+3	; 0x03
     ec4:	0c 5f       	subi	r16, 0xFC	; 252
     ec6:	1f 4f       	sbci	r17, 0xFF	; 255
     ec8:	06 c0       	rjmp	.+12     	; 0xed6 <vfprintf+0x2b8>
     eca:	60 81       	ld	r22, Z
     ecc:	71 81       	ldd	r23, Z+1	; 0x01
     ece:	80 e0       	ldi	r24, 0x00	; 0
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	0e 5f       	subi	r16, 0xFE	; 254
     ed4:	1f 4f       	sbci	r17, 0xFF	; 255
     ed6:	a3 01       	movw	r20, r6
     ed8:	f1 d0       	rcall	.+482    	; 0x10bc <__ultoa_invert>
     eda:	88 2e       	mov	r8, r24
     edc:	86 18       	sub	r8, r6
     ede:	fb 2d       	mov	r31, r11
     ee0:	ff 77       	andi	r31, 0x7F	; 127
     ee2:	3f 2e       	mov	r3, r31
     ee4:	36 fe       	sbrs	r3, 6
     ee6:	0d c0       	rjmp	.+26     	; 0xf02 <vfprintf+0x2e4>
     ee8:	23 2d       	mov	r18, r3
     eea:	2e 7f       	andi	r18, 0xFE	; 254
     eec:	a2 2e       	mov	r10, r18
     eee:	89 14       	cp	r8, r9
     ef0:	58 f4       	brcc	.+22     	; 0xf08 <vfprintf+0x2ea>
     ef2:	34 fe       	sbrs	r3, 4
     ef4:	0b c0       	rjmp	.+22     	; 0xf0c <vfprintf+0x2ee>
     ef6:	32 fc       	sbrc	r3, 2
     ef8:	09 c0       	rjmp	.+18     	; 0xf0c <vfprintf+0x2ee>
     efa:	83 2d       	mov	r24, r3
     efc:	8e 7e       	andi	r24, 0xEE	; 238
     efe:	a8 2e       	mov	r10, r24
     f00:	05 c0       	rjmp	.+10     	; 0xf0c <vfprintf+0x2ee>
     f02:	b8 2c       	mov	r11, r8
     f04:	a3 2c       	mov	r10, r3
     f06:	03 c0       	rjmp	.+6      	; 0xf0e <vfprintf+0x2f0>
     f08:	b8 2c       	mov	r11, r8
     f0a:	01 c0       	rjmp	.+2      	; 0xf0e <vfprintf+0x2f0>
     f0c:	b9 2c       	mov	r11, r9
     f0e:	a4 fe       	sbrs	r10, 4
     f10:	0f c0       	rjmp	.+30     	; 0xf30 <vfprintf+0x312>
     f12:	fe 01       	movw	r30, r28
     f14:	e8 0d       	add	r30, r8
     f16:	f1 1d       	adc	r31, r1
     f18:	80 81       	ld	r24, Z
     f1a:	80 33       	cpi	r24, 0x30	; 48
     f1c:	21 f4       	brne	.+8      	; 0xf26 <vfprintf+0x308>
     f1e:	9a 2d       	mov	r25, r10
     f20:	99 7e       	andi	r25, 0xE9	; 233
     f22:	a9 2e       	mov	r10, r25
     f24:	09 c0       	rjmp	.+18     	; 0xf38 <vfprintf+0x31a>
     f26:	a2 fe       	sbrs	r10, 2
     f28:	06 c0       	rjmp	.+12     	; 0xf36 <vfprintf+0x318>
     f2a:	b3 94       	inc	r11
     f2c:	b3 94       	inc	r11
     f2e:	04 c0       	rjmp	.+8      	; 0xf38 <vfprintf+0x31a>
     f30:	8a 2d       	mov	r24, r10
     f32:	86 78       	andi	r24, 0x86	; 134
     f34:	09 f0       	breq	.+2      	; 0xf38 <vfprintf+0x31a>
     f36:	b3 94       	inc	r11
     f38:	a3 fc       	sbrc	r10, 3
     f3a:	10 c0       	rjmp	.+32     	; 0xf5c <vfprintf+0x33e>
     f3c:	a0 fe       	sbrs	r10, 0
     f3e:	06 c0       	rjmp	.+12     	; 0xf4c <vfprintf+0x32e>
     f40:	b2 14       	cp	r11, r2
     f42:	80 f4       	brcc	.+32     	; 0xf64 <vfprintf+0x346>
     f44:	28 0c       	add	r2, r8
     f46:	92 2c       	mov	r9, r2
     f48:	9b 18       	sub	r9, r11
     f4a:	0d c0       	rjmp	.+26     	; 0xf66 <vfprintf+0x348>
     f4c:	b2 14       	cp	r11, r2
     f4e:	58 f4       	brcc	.+22     	; 0xf66 <vfprintf+0x348>
     f50:	b6 01       	movw	r22, r12
     f52:	80 e2       	ldi	r24, 0x20	; 32
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	76 d0       	rcall	.+236    	; 0x1044 <fputc>
     f58:	b3 94       	inc	r11
     f5a:	f8 cf       	rjmp	.-16     	; 0xf4c <vfprintf+0x32e>
     f5c:	b2 14       	cp	r11, r2
     f5e:	18 f4       	brcc	.+6      	; 0xf66 <vfprintf+0x348>
     f60:	2b 18       	sub	r2, r11
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <vfprintf+0x34a>
     f64:	98 2c       	mov	r9, r8
     f66:	21 2c       	mov	r2, r1
     f68:	a4 fe       	sbrs	r10, 4
     f6a:	0f c0       	rjmp	.+30     	; 0xf8a <vfprintf+0x36c>
     f6c:	b6 01       	movw	r22, r12
     f6e:	80 e3       	ldi	r24, 0x30	; 48
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	68 d0       	rcall	.+208    	; 0x1044 <fputc>
     f74:	a2 fe       	sbrs	r10, 2
     f76:	16 c0       	rjmp	.+44     	; 0xfa4 <vfprintf+0x386>
     f78:	a1 fc       	sbrc	r10, 1
     f7a:	03 c0       	rjmp	.+6      	; 0xf82 <vfprintf+0x364>
     f7c:	88 e7       	ldi	r24, 0x78	; 120
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	02 c0       	rjmp	.+4      	; 0xf86 <vfprintf+0x368>
     f82:	88 e5       	ldi	r24, 0x58	; 88
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	b6 01       	movw	r22, r12
     f88:	0c c0       	rjmp	.+24     	; 0xfa2 <vfprintf+0x384>
     f8a:	8a 2d       	mov	r24, r10
     f8c:	86 78       	andi	r24, 0x86	; 134
     f8e:	51 f0       	breq	.+20     	; 0xfa4 <vfprintf+0x386>
     f90:	a1 fe       	sbrs	r10, 1
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <vfprintf+0x37a>
     f94:	8b e2       	ldi	r24, 0x2B	; 43
     f96:	01 c0       	rjmp	.+2      	; 0xf9a <vfprintf+0x37c>
     f98:	80 e2       	ldi	r24, 0x20	; 32
     f9a:	a7 fc       	sbrc	r10, 7
     f9c:	8d e2       	ldi	r24, 0x2D	; 45
     f9e:	b6 01       	movw	r22, r12
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	50 d0       	rcall	.+160    	; 0x1044 <fputc>
     fa4:	89 14       	cp	r8, r9
     fa6:	30 f4       	brcc	.+12     	; 0xfb4 <vfprintf+0x396>
     fa8:	b6 01       	movw	r22, r12
     faa:	80 e3       	ldi	r24, 0x30	; 48
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	4a d0       	rcall	.+148    	; 0x1044 <fputc>
     fb0:	9a 94       	dec	r9
     fb2:	f8 cf       	rjmp	.-16     	; 0xfa4 <vfprintf+0x386>
     fb4:	8a 94       	dec	r8
     fb6:	f3 01       	movw	r30, r6
     fb8:	e8 0d       	add	r30, r8
     fba:	f1 1d       	adc	r31, r1
     fbc:	80 81       	ld	r24, Z
     fbe:	b6 01       	movw	r22, r12
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	40 d0       	rcall	.+128    	; 0x1044 <fputc>
     fc4:	81 10       	cpse	r8, r1
     fc6:	f6 cf       	rjmp	.-20     	; 0xfb4 <vfprintf+0x396>
     fc8:	22 20       	and	r2, r2
     fca:	09 f4       	brne	.+2      	; 0xfce <vfprintf+0x3b0>
     fcc:	4e ce       	rjmp	.-868    	; 0xc6a <vfprintf+0x4c>
     fce:	b6 01       	movw	r22, r12
     fd0:	80 e2       	ldi	r24, 0x20	; 32
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	37 d0       	rcall	.+110    	; 0x1044 <fputc>
     fd6:	2a 94       	dec	r2
     fd8:	f7 cf       	rjmp	.-18     	; 0xfc8 <vfprintf+0x3aa>
     fda:	f6 01       	movw	r30, r12
     fdc:	86 81       	ldd	r24, Z+6	; 0x06
     fde:	97 81       	ldd	r25, Z+7	; 0x07
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <vfprintf+0x3c8>
     fe2:	8f ef       	ldi	r24, 0xFF	; 255
     fe4:	9f ef       	ldi	r25, 0xFF	; 255
     fe6:	2b 96       	adiw	r28, 0x0b	; 11
     fe8:	0f b6       	in	r0, 0x3f	; 63
     fea:	f8 94       	cli
     fec:	de bf       	out	0x3e, r29	; 62
     fee:	0f be       	out	0x3f, r0	; 63
     ff0:	cd bf       	out	0x3d, r28	; 61
     ff2:	df 91       	pop	r29
     ff4:	cf 91       	pop	r28
     ff6:	1f 91       	pop	r17
     ff8:	0f 91       	pop	r16
     ffa:	ff 90       	pop	r15
     ffc:	ef 90       	pop	r14
     ffe:	df 90       	pop	r13
    1000:	cf 90       	pop	r12
    1002:	bf 90       	pop	r11
    1004:	af 90       	pop	r10
    1006:	9f 90       	pop	r9
    1008:	8f 90       	pop	r8
    100a:	7f 90       	pop	r7
    100c:	6f 90       	pop	r6
    100e:	5f 90       	pop	r5
    1010:	4f 90       	pop	r4
    1012:	3f 90       	pop	r3
    1014:	2f 90       	pop	r2
    1016:	08 95       	ret

00001018 <strnlen_P>:
    1018:	fc 01       	movw	r30, r24
    101a:	05 90       	lpm	r0, Z+
    101c:	61 50       	subi	r22, 0x01	; 1
    101e:	70 40       	sbci	r23, 0x00	; 0
    1020:	01 10       	cpse	r0, r1
    1022:	d8 f7       	brcc	.-10     	; 0x101a <strnlen_P+0x2>
    1024:	80 95       	com	r24
    1026:	90 95       	com	r25
    1028:	8e 0f       	add	r24, r30
    102a:	9f 1f       	adc	r25, r31
    102c:	08 95       	ret

0000102e <strnlen>:
    102e:	fc 01       	movw	r30, r24
    1030:	61 50       	subi	r22, 0x01	; 1
    1032:	70 40       	sbci	r23, 0x00	; 0
    1034:	01 90       	ld	r0, Z+
    1036:	01 10       	cpse	r0, r1
    1038:	d8 f7       	brcc	.-10     	; 0x1030 <strnlen+0x2>
    103a:	80 95       	com	r24
    103c:	90 95       	com	r25
    103e:	8e 0f       	add	r24, r30
    1040:	9f 1f       	adc	r25, r31
    1042:	08 95       	ret

00001044 <fputc>:
    1044:	0f 93       	push	r16
    1046:	1f 93       	push	r17
    1048:	cf 93       	push	r28
    104a:	df 93       	push	r29
    104c:	fb 01       	movw	r30, r22
    104e:	23 81       	ldd	r18, Z+3	; 0x03
    1050:	21 fd       	sbrc	r18, 1
    1052:	03 c0       	rjmp	.+6      	; 0x105a <fputc+0x16>
    1054:	8f ef       	ldi	r24, 0xFF	; 255
    1056:	9f ef       	ldi	r25, 0xFF	; 255
    1058:	2c c0       	rjmp	.+88     	; 0x10b2 <fputc+0x6e>
    105a:	22 ff       	sbrs	r18, 2
    105c:	16 c0       	rjmp	.+44     	; 0x108a <fputc+0x46>
    105e:	46 81       	ldd	r20, Z+6	; 0x06
    1060:	57 81       	ldd	r21, Z+7	; 0x07
    1062:	24 81       	ldd	r18, Z+4	; 0x04
    1064:	35 81       	ldd	r19, Z+5	; 0x05
    1066:	42 17       	cp	r20, r18
    1068:	53 07       	cpc	r21, r19
    106a:	44 f4       	brge	.+16     	; 0x107c <fputc+0x38>
    106c:	a0 81       	ld	r26, Z
    106e:	b1 81       	ldd	r27, Z+1	; 0x01
    1070:	9d 01       	movw	r18, r26
    1072:	2f 5f       	subi	r18, 0xFF	; 255
    1074:	3f 4f       	sbci	r19, 0xFF	; 255
    1076:	31 83       	std	Z+1, r19	; 0x01
    1078:	20 83       	st	Z, r18
    107a:	8c 93       	st	X, r24
    107c:	26 81       	ldd	r18, Z+6	; 0x06
    107e:	37 81       	ldd	r19, Z+7	; 0x07
    1080:	2f 5f       	subi	r18, 0xFF	; 255
    1082:	3f 4f       	sbci	r19, 0xFF	; 255
    1084:	37 83       	std	Z+7, r19	; 0x07
    1086:	26 83       	std	Z+6, r18	; 0x06
    1088:	14 c0       	rjmp	.+40     	; 0x10b2 <fputc+0x6e>
    108a:	8b 01       	movw	r16, r22
    108c:	ec 01       	movw	r28, r24
    108e:	fb 01       	movw	r30, r22
    1090:	00 84       	ldd	r0, Z+8	; 0x08
    1092:	f1 85       	ldd	r31, Z+9	; 0x09
    1094:	e0 2d       	mov	r30, r0
    1096:	09 95       	icall
    1098:	89 2b       	or	r24, r25
    109a:	e1 f6       	brne	.-72     	; 0x1054 <fputc+0x10>
    109c:	d8 01       	movw	r26, r16
    109e:	16 96       	adiw	r26, 0x06	; 6
    10a0:	8d 91       	ld	r24, X+
    10a2:	9c 91       	ld	r25, X
    10a4:	17 97       	sbiw	r26, 0x07	; 7
    10a6:	01 96       	adiw	r24, 0x01	; 1
    10a8:	17 96       	adiw	r26, 0x07	; 7
    10aa:	9c 93       	st	X, r25
    10ac:	8e 93       	st	-X, r24
    10ae:	16 97       	sbiw	r26, 0x06	; 6
    10b0:	ce 01       	movw	r24, r28
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	1f 91       	pop	r17
    10b8:	0f 91       	pop	r16
    10ba:	08 95       	ret

000010bc <__ultoa_invert>:
    10bc:	fa 01       	movw	r30, r20
    10be:	aa 27       	eor	r26, r26
    10c0:	28 30       	cpi	r18, 0x08	; 8
    10c2:	51 f1       	breq	.+84     	; 0x1118 <__ultoa_invert+0x5c>
    10c4:	20 31       	cpi	r18, 0x10	; 16
    10c6:	81 f1       	breq	.+96     	; 0x1128 <__ultoa_invert+0x6c>
    10c8:	e8 94       	clt
    10ca:	6f 93       	push	r22
    10cc:	6e 7f       	andi	r22, 0xFE	; 254
    10ce:	6e 5f       	subi	r22, 0xFE	; 254
    10d0:	7f 4f       	sbci	r23, 0xFF	; 255
    10d2:	8f 4f       	sbci	r24, 0xFF	; 255
    10d4:	9f 4f       	sbci	r25, 0xFF	; 255
    10d6:	af 4f       	sbci	r26, 0xFF	; 255
    10d8:	b1 e0       	ldi	r27, 0x01	; 1
    10da:	3e d0       	rcall	.+124    	; 0x1158 <__ultoa_invert+0x9c>
    10dc:	b4 e0       	ldi	r27, 0x04	; 4
    10de:	3c d0       	rcall	.+120    	; 0x1158 <__ultoa_invert+0x9c>
    10e0:	67 0f       	add	r22, r23
    10e2:	78 1f       	adc	r23, r24
    10e4:	89 1f       	adc	r24, r25
    10e6:	9a 1f       	adc	r25, r26
    10e8:	a1 1d       	adc	r26, r1
    10ea:	68 0f       	add	r22, r24
    10ec:	79 1f       	adc	r23, r25
    10ee:	8a 1f       	adc	r24, r26
    10f0:	91 1d       	adc	r25, r1
    10f2:	a1 1d       	adc	r26, r1
    10f4:	6a 0f       	add	r22, r26
    10f6:	71 1d       	adc	r23, r1
    10f8:	81 1d       	adc	r24, r1
    10fa:	91 1d       	adc	r25, r1
    10fc:	a1 1d       	adc	r26, r1
    10fe:	20 d0       	rcall	.+64     	; 0x1140 <__ultoa_invert+0x84>
    1100:	09 f4       	brne	.+2      	; 0x1104 <__ultoa_invert+0x48>
    1102:	68 94       	set
    1104:	3f 91       	pop	r19
    1106:	2a e0       	ldi	r18, 0x0A	; 10
    1108:	26 9f       	mul	r18, r22
    110a:	11 24       	eor	r1, r1
    110c:	30 19       	sub	r19, r0
    110e:	30 5d       	subi	r19, 0xD0	; 208
    1110:	31 93       	st	Z+, r19
    1112:	de f6       	brtc	.-74     	; 0x10ca <__ultoa_invert+0xe>
    1114:	cf 01       	movw	r24, r30
    1116:	08 95       	ret
    1118:	46 2f       	mov	r20, r22
    111a:	47 70       	andi	r20, 0x07	; 7
    111c:	40 5d       	subi	r20, 0xD0	; 208
    111e:	41 93       	st	Z+, r20
    1120:	b3 e0       	ldi	r27, 0x03	; 3
    1122:	0f d0       	rcall	.+30     	; 0x1142 <__ultoa_invert+0x86>
    1124:	c9 f7       	brne	.-14     	; 0x1118 <__ultoa_invert+0x5c>
    1126:	f6 cf       	rjmp	.-20     	; 0x1114 <__ultoa_invert+0x58>
    1128:	46 2f       	mov	r20, r22
    112a:	4f 70       	andi	r20, 0x0F	; 15
    112c:	40 5d       	subi	r20, 0xD0	; 208
    112e:	4a 33       	cpi	r20, 0x3A	; 58
    1130:	18 f0       	brcs	.+6      	; 0x1138 <__ultoa_invert+0x7c>
    1132:	49 5d       	subi	r20, 0xD9	; 217
    1134:	31 fd       	sbrc	r19, 1
    1136:	40 52       	subi	r20, 0x20	; 32
    1138:	41 93       	st	Z+, r20
    113a:	02 d0       	rcall	.+4      	; 0x1140 <__ultoa_invert+0x84>
    113c:	a9 f7       	brne	.-22     	; 0x1128 <__ultoa_invert+0x6c>
    113e:	ea cf       	rjmp	.-44     	; 0x1114 <__ultoa_invert+0x58>
    1140:	b4 e0       	ldi	r27, 0x04	; 4
    1142:	a6 95       	lsr	r26
    1144:	97 95       	ror	r25
    1146:	87 95       	ror	r24
    1148:	77 95       	ror	r23
    114a:	67 95       	ror	r22
    114c:	ba 95       	dec	r27
    114e:	c9 f7       	brne	.-14     	; 0x1142 <__ultoa_invert+0x86>
    1150:	00 97       	sbiw	r24, 0x00	; 0
    1152:	61 05       	cpc	r22, r1
    1154:	71 05       	cpc	r23, r1
    1156:	08 95       	ret
    1158:	9b 01       	movw	r18, r22
    115a:	ac 01       	movw	r20, r24
    115c:	0a 2e       	mov	r0, r26
    115e:	06 94       	lsr	r0
    1160:	57 95       	ror	r21
    1162:	47 95       	ror	r20
    1164:	37 95       	ror	r19
    1166:	27 95       	ror	r18
    1168:	ba 95       	dec	r27
    116a:	c9 f7       	brne	.-14     	; 0x115e <__ultoa_invert+0xa2>
    116c:	62 0f       	add	r22, r18
    116e:	73 1f       	adc	r23, r19
    1170:	84 1f       	adc	r24, r20
    1172:	95 1f       	adc	r25, r21
    1174:	a0 1d       	adc	r26, r0
    1176:	08 95       	ret

00001178 <_exit>:
    1178:	f8 94       	cli

0000117a <__stop_program>:
    117a:	ff cf       	rjmp	.-2      	; 0x117a <__stop_program>
