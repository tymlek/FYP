
out.exe:     file format elf32-littlearm
out.exe
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010324

Program Header:
0x70000001 off    0x00001600 vaddr 0x00011600 paddr 0x00011600 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    PHDR off    0x00000034 vaddr 0x00010034 paddr 0x00010034 align 2**2
         filesz 0x00000100 memsz 0x00000100 flags r-x
  INTERP off    0x00000134 vaddr 0x00010134 paddr 0x00010134 align 2**0
         filesz 0x00000019 memsz 0x00000019 flags r--
    LOAD off    0x00000000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x0000160c memsz 0x0000160c flags r-x
    LOAD off    0x0000160c vaddr 0x0002160c paddr 0x0002160c align 2**16
         filesz 0x00000120 memsz 0x00000124 flags rw-
 DYNAMIC off    0x00001618 vaddr 0x00021618 paddr 0x00021618 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000150 vaddr 0x00010150 paddr 0x00010150 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x000102c8
  FINI                 0x000115f4
  INIT_ARRAY           0x0002160c
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x00021610
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x00010194
  STRTAB               0x00010224
  SYMTAB               0x000101c4
  STRSZ                0x00000048
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x00021700
  PLTRELSZ             0x00000028
  PLTREL               0x00000011
  JMPREL               0x000102a0
  REL                  0x00010298
  RELSZ                0x00000008
  RELENT               0x00000008
  VERNEED              0x00010278
  VERNEEDNUM           0x00000001
  VERSYM               0x0001026c

Version References:
  required from libc.so.6:
    0x0d696914 0x00 02 GLIBC_2.4
private flags = 5000402: [Version5 EABI] [hard-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000019  00010134  00010134  00000134  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  00010150  00010150  00000150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  00010170  00010170  00000170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000030  00010194  00010194  00000194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000060  000101c4  000101c4  000001c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000048  00010224  00010224  00000224  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000c  0001026c  0001026c  0000026c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00010278  00010278  00000278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000008  00010298  00010298  00000298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000028  000102a0  000102a0  000002a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000000c  000102c8  000102c8  000002c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000050  000102d4  000102d4  000002d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000012d0  00010324  00010324  00000324  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000008  000115f4  000115f4  000015f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000004  000115fc  000115fc  000015fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .ARM.exidx    00000008  00011600  00011600  00001600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000004  00011608  00011608  00001608  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000004  0002160c  0002160c  0000160c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000004  00021610  00021610  00001610  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000004  00021614  00021614  00001614  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000e8  00021618  00021618  00001618  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000024  00021700  00021700  00001700  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000008  00021724  00021724  00001724  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000004  0002172c  0002172c  0000172c  2**0
                  ALLOC
 24 .comment      00000044  00000000  00000000  0000172c  2**0
                  CONTENTS, READONLY
 25 .ARM.attributes 00000031  00000000  00000000  00001770  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010134 l    d  .interp	00000000              .interp
00010150 l    d  .note.ABI-tag	00000000              .note.ABI-tag
00010170 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
00010194 l    d  .gnu.hash	00000000              .gnu.hash
000101c4 l    d  .dynsym	00000000              .dynsym
00010224 l    d  .dynstr	00000000              .dynstr
0001026c l    d  .gnu.version	00000000              .gnu.version
00010278 l    d  .gnu.version_r	00000000              .gnu.version_r
00010298 l    d  .rel.dyn	00000000              .rel.dyn
000102a0 l    d  .rel.plt	00000000              .rel.plt
000102c8 l    d  .init	00000000              .init
000102d4 l    d  .plt	00000000              .plt
00010324 l    d  .text	00000000              .text
000115f4 l    d  .fini	00000000              .fini
000115fc l    d  .rodata	00000000              .rodata
00011600 l    d  .ARM.exidx	00000000              .ARM.exidx
00011608 l    d  .eh_frame	00000000              .eh_frame
0002160c l    d  .init_array	00000000              .init_array
00021610 l    d  .fini_array	00000000              .fini_array
00021614 l    d  .jcr	00000000              .jcr
00021618 l    d  .dynamic	00000000              .dynamic
00021700 l    d  .got	00000000              .got
00021724 l    d  .data	00000000              .data
0002172c l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .ARM.attributes	00000000              .ARM.attributes
00000000 l    df *ABS*	00000000              /usr/lib/gcc/arm-linux-gnueabihf/4.9/../../../arm-linux-gnueabihf/crt1.o
00000000 l    df *ABS*	00000000              /usr/lib/gcc/arm-linux-gnueabihf/4.9/../../../arm-linux-gnueabihf/crti.o
00010360 l     F .text	00000000              call_weak_fn
00000000 l    df *ABS*	00000000              /usr/lib/gcc/arm-linux-gnueabihf/4.9/../../../arm-linux-gnueabihf/crtn.o
00000000 l    df *ABS*	00000000              crtstuff.c
00021614 l     O .jcr	00000000              __JCR_LIST__
00010384 l     F .text	00000000              deregister_tm_clones
000103b4 l     F .text	00000000              register_tm_clones
000103ec l     F .text	00000000              __do_global_dtors_aux
0002172c l     O .bss	00000001              completed.9004
00021610 l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
00010414 l     F .text	00000000              frame_dummy
0002160c l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              main.c
00000000 l    df *ABS*	00000000              RobotArmManager.c
00011284 l     F .text	00000038              cleanUpRelations
00000000 l    df *ABS*	00000000              Action.c
00000000 l    df *ABS*	00000000              GraspingManipulator.c
00000000 l    df *ABS*	00000000              RotatingArmJoint.c
00000000 l    df *ABS*	00000000              SlidingArmJoint.c
00000000 l    df *ABS*	00000000              elf-init.oS
00000000 l    df *ABS*	00000000              crtstuff.c
00011608 l     O .eh_frame	00000000              __FRAME_END__
00021614 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
00021610 l       .init_array	00000000              __init_array_end
00021618 l     O .dynamic	00000000              _DYNAMIC
0002160c l       .init_array	00000000              __init_array_start
00021700 l     O .got	00000000              _GLOBAL_OFFSET_TABLE_
000115f0 g     F .text	00000004              __libc_csu_fini
00011314 g     F .text	00000024              GraspingManipulator_open
00010fec g     F .text	0000005c              RobotArmManager_clearItsSlidingArmJoint
00010b78 g     F .text	0000015c              RobotArmManager_zero
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
00021724  w      .data	00000000              data_start
00011410 g     F .text	00000060              RotatingArmJoint_rotate
0002172c g       .bss	00000000              __bss_start__
000113d4 g     F .text	0000003c              RotatingArmJoint_getRotation
0001135c g     F .text	00000050              GraspingManipulator_setMaxForce
00010cfc g     F .text	0000002c              RobotArmManager_setItsGraspingManipulator
00000000       F *UND*	00000000              free@@GLIBC_2.4
00021730 g       .bss	00000000              _bss_end__
0002172c g       .data	00000000              _edata
000115f4 g     F .fini	00000000              _fini
000114b8 g     F .text	00000028              SlidingArmJoint_getLength
00021730 g       .bss	00000000              __bss_end__
00010eb8 g     F .text	00000028              RobotArmManager_getItsSlidingArmJoint
00010d28 g     F .text	00000028              RobotArmManager_getItsRotatingArmJoint
00011198 g     F .text	00000078              RobotArmManager_clearItsAction
000113ac g     F .text	00000028              GraspingManipulator_getClosure
00021724 g       .data	00000000              __data_start
00000000       F *UND*	00000000              malloc@@GLIBC_2.4
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.4
000110f4 g     F .text	000000a4              RobotArmManager_removeItsAction
00000000  w      *UND*	00000000              __gmon_start__
00021728 g     O .data	00000000              .hidden __dso_handle
00010dd4 g     F .text	00000088              RobotArmManager_removeItsRotatingArmJoint
000115fc g     O .rodata	00000004              _IO_stdin_used
000107dc g     F .text	000002c0              RobotArmManager_executeStep
0001158c g     F .text	00000064              __libc_csu_init
00011338 g     F .text	00000024              GraspingManipulator_close
00021730 g       .bss	00000000              _end
00011210 g     F .text	00000040              RobotArmManager_Create
00010324 g     F .text	00000000              _start
000114e0 g     F .text	00000064              SlidingArmJoint_setLength
00010e5c g     F .text	0000005c              RobotArmManager_clearItsRotatingArmJoint
00011250 g     F .text	00000034              RobotArmManager_Destroy
00010d50 g     F .text	00000084              RobotArmManager_addItsRotatingArmJoint
00021730 g       .bss	00000000              __end__
0002172c g       .bss	00000000              __bss_start
0001044c g     F .text	000000d4              main
000112bc g     F .text	0000002c              Action_Create
000112e8 g     F .text	0000002c              Action_Delete
00011470 g     F .text	00000048              RotatingArmJoint_zero
00011544 g     F .text	00000048              SlidingArmJoint_zero
00010614 g     F .text	00000020              RobotArmManager_Cleanup
00010ee0 g     F .text	00000084              RobotArmManager_addItsSlidingArmJoint
00011070 g     F .text	00000084              RobotArmManager_addItsAction
00000000  w      *UND*	00000000              _Jv_RegisterClasses
00011048 g     F .text	00000028              RobotArmManager_getItsAction
00010f64 g     F .text	00000088              RobotArmManager_removeItsSlidingAmJoint
00010634 g     F .text	000001a8              RobotArmManager_computeTrajectory
00010cd4 g     F .text	00000028              RobotArmManager_getItsGraspingManipulator
0002172c g     O .data	00000000              .hidden __TMC_END__
00010a9c g     F .text	000000dc              RobotArmManager_graspAt
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
00000000       F *UND*	00000000              abort@@GLIBC_2.4
000102c8 g     F .init	00000000              _init
00010520 g     F .text	000000f4              RobotArmManager_Init


