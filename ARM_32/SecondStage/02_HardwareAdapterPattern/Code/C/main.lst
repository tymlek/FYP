###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.2.15995/W32 for ARM       21/Apr/2018  09:33:35
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\02_HardwareAdapterPattern\Code\C\main.c
#    Command line =  
#        -f C:\Users\Tim\AppData\Local\Temp\EWF48D.tmp
#        (C:\Users\Tim\Programming\Code\ARM_32\Patterns\02_HardwareAdapterPattern\Code\C\main.c
#        -lC
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\02_HardwareAdapterPattern\Code\C\Debug\List
#        -lA
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\02_HardwareAdapterPattern\Code\C\Debug\List
#        -o
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\02_HardwareAdapterPattern\Code\C\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 --fpu=None --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\arm\INC\c\DLib_Config_Normal.h" -On)
#    Locale       =  C
#    List file    =  
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\02_HardwareAdapterPattern\Code\C\Debug\List\main.lst
#    Object file  =  
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\02_HardwareAdapterPattern\Code\C\Debug\Obj\main.o
#
###############################################################################

C:\Users\Tim\Programming\Code\ARM_32\Patterns\02_HardwareAdapterPattern\Code\C\main.c
      1          #include <stdlib.h>
      2          #include <stdio.h>
      3          #include "AcmeO2SensorProxy.h"
      4          #include "UltimateO2SensorProxy.h"
      5          #include "IO2Sensor.h"
      6          

   \                                 In section .text, align 4, keep-with-next
      7          int main(void) {
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
      8          	AcmeO2SensorProxy acmeSensor;
      9          	AcmeO2Adapter acmeAdapter;
     10          	IO2Sensor* io2Sensor = IO2Sensor_Create();
   \   00000004   0x.... 0x....      BL       IO2Sensor_Create
   \   00000008   0x0004             MOVS     R4,R0
     11          
     12          	AcmeO2SensorProxy_Init(&acmeSensor);
   \   0000000A   0xA803             ADD      R0,SP,#+12
   \   0000000C   0x.... 0x....      BL       AcmeO2SensorProxy_Init
     13          	AcmeO2Adapter_Init(&acmeAdapter);
   \   00000010   0x4668             MOV      R0,SP
   \   00000012   0x.... 0x....      BL       AcmeO2Adapter_Init
     14          	AcmeO2Adapter_configure(&acmeAdapter, &acmeSensor);
   \   00000016   0xA903             ADD      R1,SP,#+12
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x.... 0x....      BL       AcmeO2Adapter_configure
     15          	IO2Sensor_Init(io2Sensor);
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x.... 0x....      BL       IO2Sensor_Init
     16          
     17          	printf("O2 Concentration: %d\n", AcmeO2Adapter_gimmeO2Conc(&acmeAdapter));
   \   00000024   0x4668             MOV      R0,SP
   \   00000026   0x.... 0x....      BL       AcmeO2Adapter_gimmeO2Conc
   \   0000002A   0x0001             MOVS     R1,R0
   \   0000002C   0x480D             LDR.N    R0,??main_0
   \   0000002E   0x.... 0x....      BL       printf
     18          	printf("O2 Flow: %d\n", AcmeO2Adapter_gimmeO2Flow(&acmeAdapter));
   \   00000032   0x4668             MOV      R0,SP
   \   00000034   0x.... 0x....      BL       AcmeO2Adapter_gimmeO2Flow
   \   00000038   0x0001             MOVS     R1,R0
   \   0000003A   0x480B             LDR.N    R0,??main_0+0x4
   \   0000003C   0x.... 0x....      BL       printf
     19          
     20          	printf("O2 Concentration: %d\n",io2Sensor->gimmeO2Conc((IO2Sensor*)&acmeAdapter));
   \   00000040   0x4668             MOV      R0,SP
   \   00000042   0x6861             LDR      R1,[R4, #+4]
   \   00000044   0x4788             BLX      R1
   \   00000046   0x0001             MOVS     R1,R0
   \   00000048   0x4806             LDR.N    R0,??main_0
   \   0000004A   0x.... 0x....      BL       printf
     21          	printf("O2 Flow: %d\n", io2Sensor->gimmeO2Flow((IO2Sensor*)&acmeAdapter));
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x68A1             LDR      R1,[R4, #+8]
   \   00000052   0x4788             BLX      R1
   \   00000054   0x0001             MOVS     R1,R0
   \   00000056   0x4804             LDR.N    R0,??main_0+0x4
   \   00000058   0x.... 0x....      BL       printf
     22                  
     23                  IO2Sensor_Destroy(io2Sensor);
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0x.... 0x....      BL       IO2Sensor_Destroy
     24          
     25          	while (1) {
   \                     ??main_1: (+1)
   \   00000062   0xE7FE             B.N      ??main_1
   \                     ??main_0:
   \   00000064   0x........         DC32     ?_0
   \   00000068   0x........         DC32     ?_1
     26          		
     27          	}
     28          }

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x4F 0x32          DC8 "O2 Concentration: %d\012"
   \              0x20 0x43    
   \              0x6F 0x6E    
   \              0x63 0x65    
   \              0x6E 0x74    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x4F 0x32          DC8 "O2 Flow: %d\012"
   \              0x20 0x46    
   \              0x6C 0x6F    
   \              0x77 0x3A    
   \              0x20 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   main
        32   -- Indirect call
        32   -> AcmeO2Adapter_Init
        32   -> AcmeO2Adapter_configure
        32   -> AcmeO2Adapter_gimmeO2Conc
        32   -> AcmeO2Adapter_gimmeO2Flow
        32   -> AcmeO2SensorProxy_Init
        32   -> IO2Sensor_Create
        32   -> IO2Sensor_Destroy
        32   -> IO2Sensor_Init
        32   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      24  ?_0
      16  ?_1
     108  main

 
  40 bytes in section .rodata
 108 bytes in section .text
 
 108 bytes of CODE  memory
  40 bytes of CONST memory

Errors: none
Warnings: none
