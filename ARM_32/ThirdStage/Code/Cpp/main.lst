###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.2.15995/W32 for ARM       23/Apr/2018  02:50:34
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\main.cpp
#    Command line =  
#        -f C:\Users\Tim\AppData\Local\Temp\EW2106.tmp
#        (C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\main.cpp
#        -lC
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\Debug\List
#        -lA
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\Debug\List
#        -o
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 --fpu=None --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\arm\INC\c\DLib_Config_Normal.h" -On
#        --c++ --no_exceptions --no_rtti --no_static_destruction)
#    Locale       =  C
#    List file    =  
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\Debug\List\main.lst
#    Object file  =  
#        C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\Debug\Obj\main.o
#
###############################################################################

C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\main.cpp
      1          #include "TestBuilder.h"

   \                                 In section .text, align 2
   \   __code __interwork __softfp ECG_Module::ECG_Module()
   \                     _ZN10ECG_ModuleC1Ev: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x6001             STR      R1,[R0, #+0]
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x60C1             STR      R1,[R0, #+12]
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp ECG_Module::~ECG_Module()
   \                     _ZN10ECG_ModuleD1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x68E0             LDR      R0,[R4, #+12]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD002             BEQ.N    `?~ECG_Module_0`

  			delete this->itsTMDQueue;
  			       ^
"C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\ECG_Module.h",21  Warning[Pe414]: 
          delete of pointer to incomplete class
   \   0000000A   0x68E0             LDR      R0,[R4, #+12]
   \   0000000C   0x.... 0x....      BL       _ZdlPv
   \                     `?~ECG_Module_0`: (+1)
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp HistogramDisplay::HistogramDisplay()
   \                     _ZN16HistogramDisplayC1Ev: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x6001             STR      R1,[R0, #+0]
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x6041             STR      R1,[R0, #+4]
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp HistogramDisplay::~HistogramDisplay()
   \                     _ZN16HistogramDisplayD1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x6860             LDR      R0,[R4, #+4]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD002             BEQ.N    `?~HistogramDisplay_0`

  			delete this->itsTMDQueue;
  			       ^
"C:\Users\Tim\Programming\Code\ARM_32\Patterns\04_ECG\ECGcpp\HistogramDisplay.h",16  Warning[Pe414]: 
          delete of pointer to incomplete class
   \   0000000A   0x6860             LDR      R0,[R4, #+4]
   \   0000000C   0x.... 0x....      BL       _ZdlPv
   \                     `?~HistogramDisplay_0`: (+1)
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp TimeMarkedData::TimeMarkedData(TMDQueue *)
   \                     _ZN14TimeMarkedDataC1EP8TMDQueue: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0x6042             STR      R2,[R0, #+4]
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x6002             STR      R2,[R0, #+0]
   \   00000008   0x6081             STR      R1,[R0, #+8]
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp TMDQueue::TMDQueue()
   \                     _ZN8TMDQueueC1Ev: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x6020             STR      R0,[R4, #+0]
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x6060             STR      R0,[R4, #+4]
   \   0000000C   0x2500             MOVS     R5,#+0
   \                     ??TMDQueue_0: (+1)
   \   0000000E   0x2D14             CMP      R5,#+20
   \   00000010   0xDA0E             BGE.N    ??TMDQueue_1
   \   00000012   0x200C             MOVS     R0,#+12
   \   00000014   0x.... 0x....      BL       _Znwj
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD003             BEQ.N    ??TMDQueue_2
   \   0000001C   0x0021             MOVS     R1,R4
   \   0000001E   0x.... 0x....      BL       _ZN14TimeMarkedDataC1EP8TMDQueue
   \   00000022   0xE000             B.N      ??TMDQueue_3
   \                     ??TMDQueue_2: (+1)
   \   00000024   0x2000             MOVS     R0,#+0
   \                     ??TMDQueue_3: (+1)
   \   00000026   0xEB04 0x0185      ADD      R1,R4,R5, LSL #+2
   \   0000002A   0x6088             STR      R0,[R1, #+8]
   \   0000002C   0x1C6D             ADDS     R5,R5,#+1
   \   0000002E   0xE7EE             B.N      ??TMDQueue_0
   \                     ??TMDQueue_1: (+1)
   \   00000030   0x0020             MOVS     R0,R4
   \   00000032   0xBD32             POP      {R1,R4,R5,PC}    ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp TMDQueue::~TMDQueue()
   \                     _ZN8TMDQueueD1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xF114 0x0008      ADDS     R0,R4,#+8
   \   00000008   0x.... 0x....      BL       _ZdaPv
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp TestBuilder::~TestBuilder()
   \                     _ZN11TestBuilderD1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xF114 0x0068      ADDS     R0,R4,#+104
   \   00000008   0x.... 0x....      BL       _ZN16HistogramDisplayD1Ev
   \   0000000C   0xF114 0x0058      ADDS     R0,R4,#+88
   \   00000010   0x.... 0x....      BL       _ZN10ECG_ModuleD1Ev
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       _ZN8TMDQueueD1Ev
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp TestBuilder::TestBuilder()
   \                     _ZN11TestBuilderC1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN8TMDQueueC1Ev
   \   0000000A   0xF114 0x0058      ADDS     R0,R4,#+88
   \   0000000E   0x.... 0x....      BL       _ZN10ECG_ModuleC1Ev
   \   00000012   0xF114 0x0068      ADDS     R0,R4,#+104
   \   00000016   0x.... 0x....      BL       _ZN16HistogramDisplayC1Ev
   \   0000001A   0x0021             MOVS     R1,R4
   \   0000001C   0xF114 0x0058      ADDS     R0,R4,#+88
   \   00000020   0x.... 0x....      BL       _ZN10ECG_Module14setItsTMDQueueEP8TMDQueue
   \   00000024   0x0021             MOVS     R1,R4
   \   00000026   0xF114 0x0068      ADDS     R0,R4,#+104
   \   0000002A   0x.... 0x....      BL       _ZN16HistogramDisplay14setItsTMDQueueEP8TMDQueue
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0xBD10             POP      {R4,PC}          ;; return
      2          

   \                                 In section .text, align 4, keep-with-next
      3          int main() {
   \                     main: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
      4          	int status = 0;
                 	    ^
Warning[Pe177]: variable "status" was declared but never referenced
   \   00000002   0x2500             MOVS     R5,#+0
      5          
      6          	TestBuilder* p_TestBuilder = new TestBuilder();
   \   00000004   0x2070             MOVS     R0,#+112
   \   00000006   0x.... 0x....      BL       _Znwj
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD003             BEQ.N    ??main_1
   \   0000000E   0x.... 0x....      BL       _ZN11TestBuilderC1Ev
   \   00000012   0x0004             MOVS     R4,R0
   \   00000014   0xE000             B.N      ??main_2
   \                     ??main_1: (+1)
   \   00000016   0x2400             MOVS     R4,#+0
      7          
      8          	p_TestBuilder->getItsECG_Module()->acquireValue();
   \                     ??main_2: (+1)
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       _ZN11TestBuilder16getItsECG_ModuleEv
   \   0000001E   0x.... 0x....      BL       _ZN10ECG_Module12acquireValueEv
      9          	p_TestBuilder->getItsECG_Module()->acquireValue();
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x.... 0x....      BL       _ZN11TestBuilder16getItsECG_ModuleEv
   \   00000028   0x.... 0x....      BL       _ZN10ECG_Module12acquireValueEv
     10          	p_TestBuilder->getItsECG_Module()->acquireValue();
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0x.... 0x....      BL       _ZN11TestBuilder16getItsECG_ModuleEv
   \   00000032   0x.... 0x....      BL       _ZN10ECG_Module12acquireValueEv
     11          	p_TestBuilder->getItsECG_Module()->acquireValue();
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0x.... 0x....      BL       _ZN11TestBuilder16getItsECG_ModuleEv
   \   0000003C   0x.... 0x....      BL       _ZN10ECG_Module12acquireValueEv
     12          	p_TestBuilder->getItsECG_Module()->acquireValue();
   \   00000040   0x0020             MOVS     R0,R4
   \   00000042   0x.... 0x....      BL       _ZN11TestBuilder16getItsECG_ModuleEv
   \   00000046   0x.... 0x....      BL       _ZN10ECG_Module12acquireValueEv
     13          	
     14          	p_TestBuilder->getItsHistogram()->getValue();
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x.... 0x....      BL       _ZN11TestBuilder15getItsHistogramEv
   \   00000050   0x.... 0x....      BL       _ZN16HistogramDisplay8getValueEv
     15          	p_TestBuilder->getItsHistogram()->getValue();
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0x.... 0x....      BL       _ZN11TestBuilder15getItsHistogramEv
   \   0000005A   0x.... 0x....      BL       _ZN16HistogramDisplay8getValueEv
     16          	p_TestBuilder->getItsHistogram()->getValue();
   \   0000005E   0x0020             MOVS     R0,R4
   \   00000060   0x.... 0x....      BL       _ZN11TestBuilder15getItsHistogramEv
   \   00000064   0x.... 0x....      BL       _ZN16HistogramDisplay8getValueEv
     17          	p_TestBuilder->getItsHistogram()->getValue();
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0x.... 0x....      BL       _ZN11TestBuilder15getItsHistogramEv
   \   0000006E   0x.... 0x....      BL       _ZN16HistogramDisplay8getValueEv
     18          	p_TestBuilder->getItsHistogram()->getValue();
   \   00000072   0x0020             MOVS     R0,R4
   \   00000074   0x.... 0x....      BL       _ZN11TestBuilder15getItsHistogramEv
   \   00000078   0x.... 0x....      BL       _ZN16HistogramDisplay8getValueEv
     19          
     20          	printf("Done\n");
   \   0000007C   0x4805             LDR.N    R0,??main_0
   \   0000007E   0x.... 0x....      BL       printf
     21          
     22          	delete p_TestBuilder;
   \   00000082   0x2C00             CMP      R4,#+0
   \   00000084   0xD004             BEQ.N    ??main_3
   \   00000086   0x0020             MOVS     R0,R4
   \   00000088   0x.... 0x....      BL       _ZN11TestBuilderD1Ev
   \   0000008C   0x.... 0x....      BL       _ZdlPv
     23          
     24          	return 0;
   \                     ??main_3: (+1)
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   \                     ??main_0:
   \   00000094   0x........         DC32     ?_0
     25          }

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x44 0x6F          DC8 "Done\012"
   \              0x6E 0x65    
   \              0x0A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ECG_Module::ECG_Module()
       8   ECG_Module::~ECG_Module()
         8   -> operator delete(void *)
       0   HistogramDisplay::HistogramDisplay()
       8   HistogramDisplay::~HistogramDisplay()
         8   -> operator delete(void *)
      16   TMDQueue::TMDQueue()
        16   -> TimeMarkedData::TimeMarkedData(TMDQueue *)
        16   -> operator new(unsigned int)
       8   TMDQueue::~TMDQueue()
         8   -> operator delete[](void *)
       8   TestBuilder::TestBuilder()
         8   -> ECG_Module::ECG_Module()
         8   -> ECG_Module::setItsTMDQueue(TMDQueue *)
         8   -> HistogramDisplay::HistogramDisplay()
         8   -> HistogramDisplay::setItsTMDQueue(TMDQueue *)
         8   -> TMDQueue::TMDQueue()
       8   TestBuilder::~TestBuilder()
         8   -> ECG_Module::~ECG_Module()
         8   -> HistogramDisplay::~HistogramDisplay()
         8   -> TMDQueue::~TMDQueue()
       0   TimeMarkedData::TimeMarkedData(TMDQueue *)
      16   main
        16   -> ECG_Module::acquireValue()
        16   -> HistogramDisplay::getValue()
        16   -> TestBuilder::TestBuilder()
        16   -> TestBuilder::getItsECG_Module()
        16   -> TestBuilder::getItsHistogram()
        16   -> TestBuilder::~TestBuilder()
        16   -> operator delete(void *)
        16   -> operator new(unsigned int)
        16   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?_0
      10  ECG_Module::ECG_Module()
      20  ECG_Module::~ECG_Module()
      10  HistogramDisplay::HistogramDisplay()
      20  HistogramDisplay::~HistogramDisplay()
      52  TMDQueue::TMDQueue()
      16  TMDQueue::~TMDQueue()
      50  TestBuilder::TestBuilder()
      30  TestBuilder::~TestBuilder()
      12  TimeMarkedData::TimeMarkedData(TMDQueue *)
     152  main

 
   8 bytes in section .rodata
 372 bytes in section .text
 
 152 bytes of CODE  memory (+ 220 bytes shared)
   8 bytes of CONST memory

Errors: none
Warnings: 3
